static TO_SJIS_HI: [u8; 512] = [
    0,   2,   0,   0,   0,   0,   0,   3,   4,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    5,   0,   6,   7,   8,   9,   10,  0,   11,  0,   12,  13,  14,  0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    15,  16,  0,   0,   17,  18,  19,  20,  0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   21,  22,  23,  24,  
    25,  26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,  40,  
    41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  
    57,  58,  59,  60,  61,  62,  63,  64,  65,  66,  67,  68,  69,  70,  71,  72,  
    73,  74,  75,  76,  77,  78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  
    89,  90,  91,  92,  93,  94,  95,  96,  97,  98,  99,  100, 101, 102, 103, 104, 
    105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 
    121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 
    137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
    153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 
    169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
    0,   0,   185, 186, 187, 0,   0,   0,   0,   0,   0,   0,   0,   0,   188, 189, 
];

fn get_utf8_to_cp932<'a>(index: u8) -> &'a[(u8, u16)] {
    match index { 
        2 => &[ (39,  0x8198), (40,  0x814e), (48,  0x818b), (49,  0x817d), (52,  0x814c), (54,  0x81f7), (87,  0x817e), (119, 0x8180) ],
        3 => &[ (17,  0x839f), (18,  0x83a0), (19,  0x83a1), (20,  0x83a2), (21,  0x83a3), (22,  0x83a4), (23,  0x83a5), (24,  0x83a6), 
                (25,  0x83a7), (26,  0x83a8), (27,  0x83a9), (28,  0x83aa), (29,  0x83ab), (30,  0x83ac), (31,  0x83ad), (32,  0x83ae), 
                (33,  0x83af), (35,  0x83b0), (36,  0x83b1), (37,  0x83b2), (38,  0x83b3), (39,  0x83b4), (40,  0x83b5), (41,  0x83b6), 
                (49,  0x83bf), (50,  0x83c0), (51,  0x83c1), (52,  0x83c2), (53,  0x83c3), (54,  0x83c4), (55,  0x83c5), (56,  0x83c6), 
                (57,  0x83c7), (58,  0x83c8), (59,  0x83c9), (60,  0x83ca), (61,  0x83cb), (62,  0x83cc), (63,  0x83cd), (64,  0x83ce), 
                (65,  0x83cf), (67,  0x83d0), (68,  0x83d1), (69,  0x83d2), (70,  0x83d3), (71,  0x83d4), (72,  0x83d5), (73,  0x83d6) ],
        4 => &[ (1,   0x8446), (16,  0x8440), (17,  0x8441), (18,  0x8442), (19,  0x8443), (20,  0x8444), (21,  0x8445), (22,  0x8447), 
                (23,  0x8448), (24,  0x8449), (25,  0x844a), (26,  0x844b), (27,  0x844c), (28,  0x844d), (29,  0x844e), (30,  0x844f), 
                (31,  0x8450), (32,  0x8451), (33,  0x8452), (34,  0x8453), (35,  0x8454), (36,  0x8455), (37,  0x8456), (38,  0x8457), 
                (39,  0x8458), (40,  0x8459), (41,  0x845a), (42,  0x845b), (43,  0x845c), (44,  0x845d), (45,  0x845e), (46,  0x845f), 
                (47,  0x8460), (48,  0x8470), (49,  0x8471), (50,  0x8472), (51,  0x8473), (52,  0x8474), (53,  0x8475), (54,  0x8477), 
                (55,  0x8478), (56,  0x8479), (57,  0x847a), (58,  0x847b), (59,  0x847c), (60,  0x847d), (61,  0x847e), (62,  0x8480), 
                (63,  0x8481), (64,  0x8482), (65,  0x8483), (66,  0x8484), (67,  0x8485), (68,  0x8486), (69,  0x8487), (70,  0x8488), 
                (71,  0x8489), (72,  0x848a), (73,  0x848b), (74,  0x848c), (75,  0x848d), (76,  0x848e), (77,  0x848f), (78,  0x8490), 
                (79,  0x8491), (81,  0x8476) ],
        5 => &[ (16,  0x815d), (21,  0x815c), (24,  0x8165), (25,  0x8166), (28,  0x8167), (29,  0x8168), (32,  0x81f5), (33,  0x81f6), 
                (37,  0x8164), (38,  0x8163), (48,  0x81f1), (50,  0x818c), (51,  0x818d), (59,  0x81a6) ],
        6 => &[ (3,   0x818e), (22,  0xfa59), (33,  0xfa5a), (43,  0x81f0), (96,  0xfa4a), (97,  0xfa4b), (98,  0xfa4c), (99,  0xfa4d), 
                (100, 0xfa4e), (101, 0xfa4f), (102, 0xfa50), (103, 0xfa51), (104, 0xfa52), (105, 0xfa53), (112, 0xfa40), (113, 0xfa41), 
                (114, 0xfa42), (115, 0xfa43), (116, 0xfa44), (117, 0xfa45), (118, 0xfa46), (119, 0xfa47), (120, 0xfa48), (121, 0xfa49) ],
        7 => &[ (16,  0x81a9), (17,  0x81aa), (18,  0x81a8), (19,  0x81ab), (82,  0x81cb), (84,  0x81cc) ],
        8 => &[ (0,   0x81cd), (2,   0x81dd), (3,   0x81ce), (7,   0x81de), (8,   0x81b8), (11,  0x81b9), (17,  0x8794), (26,  0x8795), 
                (29,  0x81e5), (30,  0x8187), (31,  0x8798), (32,  0x8797), (37,  0x8161), (39,  0x81c8), (40,  0x81c9), (41,  0x879b), 
                (42,  0x879c), (43,  0x8792), (44,  0x81e8), (46,  0x8793), (52,  0x8188), (53,  0xfa5b), (61,  0x81e4), (82,  0x8790), 
                (96,  0x8182), (97,  0x8791), (102, 0x8185), (103, 0x8186), (106, 0x81e1), (107, 0x81e2) ],
        9 => &[ (2,   0x81bc), (3,   0x81bd), (6,   0x81ba), (7,   0x81bb), (37,  0x8796), (63,  0x8799) ],
        10 => &[ (18,  0x81dc) ],
        11 => &[ (96,  0x8740), (97,  0x8741), (98,  0x8742), (99,  0x8743), (100, 0x8744), (101, 0x8745), (102, 0x8746), (103, 0x8747), 
                 (104, 0x8748), (105, 0x8749), (106, 0x874a), (107, 0x874b), (108, 0x874c), (109, 0x874d), (110, 0x874e), (111, 0x874f), 
                 (112, 0x8750), (113, 0x8751), (114, 0x8752), (115, 0x8753) ],
        12 => &[ (0,   0x849f), (1,   0x84aa), (2,   0x84a0), (3,   0x84ab), (12,  0x84a1), (15,  0x84ac), (16,  0x84a2), (19,  0x84ad), 
                 (20,  0x84a4), (23,  0x84af), (24,  0x84a3), (27,  0x84ae), (28,  0x84a5), (29,  0x84ba), (32,  0x84b5), (35,  0x84b0), 
                 (36,  0x84a7), (37,  0x84bc), (40,  0x84b7), (43,  0x84b2), (44,  0x84a6), (47,  0x84b6), (48,  0x84bb), (51,  0x84b1), 
                 (52,  0x84a8), (55,  0x84b8), (56,  0x84bd), (59,  0x84b3), (60,  0x84a9), (63,  0x84b9), (66,  0x84be), (75,  0x84b4) ],
        13 => &[ (32,  0x81a1), (33,  0x81a0), (50,  0x81a3), (51,  0x81a2), (60,  0x81a5), (61,  0x81a4), (70,  0x819f), (71,  0x819e), 
                 (75,  0x819b), (78,  0x819d), (79,  0x819c), (111, 0x81fc) ],
        14 => &[ (5,   0x819a), (6,   0x8199), (64,  0x818a), (66,  0x8189), (106, 0x81f4), (109, 0x81f3), (111, 0x81f2) ],
        15 => &[ (0,   0x8140), (1,   0x8141), (2,   0x8142), (3,   0x8156), (5,   0x8158), (6,   0x8159), (7,   0x815a), (8,   0x8171), 
                 (9,   0x8172), (10,  0x8173), (11,  0x8174), (12,  0x8175), (13,  0x8176), (14,  0x8177), (15,  0x8178), (16,  0x8179), 
                 (17,  0x817a), (18,  0x81a7), (19,  0x81ac), (20,  0x816b), (21,  0x816c), (29,  0x8780), (31,  0x8781), (65,  0x829f), 
                 (66,  0x82a0), (67,  0x82a1), (68,  0x82a2), (69,  0x82a3), (70,  0x82a4), (71,  0x82a5), (72,  0x82a6), (73,  0x82a7), 
                 (74,  0x82a8), (75,  0x82a9), (76,  0x82aa), (77,  0x82ab), (78,  0x82ac), (79,  0x82ad), (80,  0x82ae), (81,  0x82af), 
                 (82,  0x82b0), (83,  0x82b1), (84,  0x82b2), (85,  0x82b3), (86,  0x82b4), (87,  0x82b5), (88,  0x82b6), (89,  0x82b7), 
                 (90,  0x82b8), (91,  0x82b9), (92,  0x82ba), (93,  0x82bb), (94,  0x82bc), (95,  0x82bd), (96,  0x82be), (97,  0x82bf), 
                 (98,  0x82c0), (99,  0x82c1), (100, 0x82c2), (101, 0x82c3), (102, 0x82c4), (103, 0x82c5), (104, 0x82c6), (105, 0x82c7), 
                 (106, 0x82c8), (107, 0x82c9), (108, 0x82ca), (109, 0x82cb), (110, 0x82cc), (111, 0x82cd), (112, 0x82ce), (113, 0x82cf), 
                 (114, 0x82d0), (115, 0x82d1), (116, 0x82d2), (117, 0x82d3), (118, 0x82d4), (119, 0x82d5), (120, 0x82d6), (121, 0x82d7), 
                 (122, 0x82d8), (123, 0x82d9), (124, 0x82da), (125, 0x82db), (126, 0x82dc), (127, 0x82dd) ],
        16 => &[ (0,   0x82de), (1,   0x82df), (2,   0x82e0), (3,   0x82e1), (4,   0x82e2), (5,   0x82e3), (6,   0x82e4), (7,   0x82e5), 
                 (8,   0x82e6), (9,   0x82e7), (10,  0x82e8), (11,  0x82e9), (12,  0x82ea), (13,  0x82eb), (14,  0x82ec), (15,  0x82ed), 
                 (16,  0x82ee), (17,  0x82ef), (18,  0x82f0), (19,  0x82f1), (27,  0x814a), (28,  0x814b), (29,  0x8154), (30,  0x8155), 
                 (33,  0x8340), (34,  0x8341), (35,  0x8342), (36,  0x8343), (37,  0x8344), (38,  0x8345), (39,  0x8346), (40,  0x8347), 
                 (41,  0x8348), (42,  0x8349), (43,  0x834a), (44,  0x834b), (45,  0x834c), (46,  0x834d), (47,  0x834e), (48,  0x834f), 
                 (49,  0x8350), (50,  0x8351), (51,  0x8352), (52,  0x8353), (53,  0x8354), (54,  0x8355), (55,  0x8356), (56,  0x8357), 
                 (57,  0x8358), (58,  0x8359), (59,  0x835a), (60,  0x835b), (61,  0x835c), (62,  0x835d), (63,  0x835e), (64,  0x835f), 
                 (65,  0x8360), (66,  0x8361), (67,  0x8362), (68,  0x8363), (69,  0x8364), (70,  0x8365), (71,  0x8366), (72,  0x8367), 
                 (73,  0x8368), (74,  0x8369), (75,  0x836a), (76,  0x836b), (77,  0x836c), (78,  0x836d), (79,  0x836e), (80,  0x836f), 
                 (81,  0x8370), (82,  0x8371), (83,  0x8372), (84,  0x8373), (85,  0x8374), (86,  0x8375), (87,  0x8376), (88,  0x8377), 
                 (89,  0x8378), (90,  0x8379), (91,  0x837a), (92,  0x837b), (93,  0x837c), (94,  0x837d), (95,  0x837e), (96,  0x8380), 
                 (97,  0x8381), (98,  0x8382), (99,  0x8383), (100, 0x8384), (101, 0x8385), (102, 0x8386), (103, 0x8387), (104, 0x8388), 
                 (105, 0x8389), (106, 0x838a), (107, 0x838b), (108, 0x838c), (109, 0x838d), (110, 0x838e), (111, 0x838f), (112, 0x8390), 
                 (113, 0x8391), (114, 0x8392), (115, 0x8393), (116, 0x8394), (117, 0x8395), (118, 0x8396), (123, 0x8145), (124, 0x815b), 
                 (125, 0x8152), (126, 0x8153) ],
        17 => &[ (49,  0xfa58), (50,  0x878b), (57,  0x878c) ],
        18 => &[ (36,  0x8785), (37,  0x8786), (38,  0x8787), (39,  0x8788), (40,  0x8789) ],
        19 => &[ (3,   0x8765), (13,  0x8769), (20,  0x8760), (24,  0x8763), (34,  0x8761), (35,  0x876b), (38,  0x876a), (39,  0x8764), 
                 (43,  0x876c), (54,  0x8766), (59,  0x876e), (73,  0x875f), (74,  0x876d), (77,  0x8762), (81,  0x8767), (87,  0x8768), 
                 (123, 0x877e), (124, 0x878f), (125, 0x878e), (126, 0x878d) ],
        20 => &[ (14,  0x8772), (15,  0x8773), (28,  0x876f), (29,  0x8770), (30,  0x8771), (33,  0x8775), (68,  0x8774), (77,  0x8783) ],
        21 => &[ (0,   0x88ea), (1,   0x929a), (3,   0x8eb5), (7,   0x969c), (8,   0x8fe4), (9,   0x8e4f), (10,  0x8fe3), (11,  0x89ba), 
                 (13,  0x9573), (14,  0x975e), (16,  0x98a0), (17,  0x894e), (20,  0x8a8e), (21,  0x98a1), (22,  0x90a2), (23,  0x99c0), 
                 (24,  0x8b75), (25,  0x95b8), (30,  0x8fe5), (33,  0x97bc), (38,  0x95c0), (40,  0xfa68), (42,  0x98a2), (45,  0x9286), 
                 (49,  0x98a3), (50,  0x8bf8), (54,  0x98a4), (56,  0x8adb), (57,  0x924f), (59,  0x8ee5), (60,  0x98a5), (63,  0x98a6), 
                 (66,  0x98a7), (67,  0x9454), (69,  0x8b76), (75,  0x9456), (77,  0x93e1), (78,  0x8cc1), (79,  0x9652), (85,  0xe568), 
                 (86,  0x98a8), (87,  0x8fe6), (88,  0x98a9), (89,  0x89b3), (93,  0x8be3), (94,  0x8cee), (95,  0x96e7), (98,  0x9ba4), 
                 (113, 0x9790), (115, 0x93fb), (126, 0x8aa3) ],
        22 => &[ (0,   0x8b54), (2,   0x98aa), (5,   0x98ab), (6,   0x97b9), (8,   0x975c), (9,   0x9188), (10,  0x98ad), (11,  0x8e96), 
                 (12,  0x93f1), (14,  0x98b0), (17,  0x895d), (18,  0x8cdd), (20,  0x8cdc), (21,  0x88e4), (24,  0x986a), (25,  0x9869), 
                 (27,  0x8db1), (28,  0x889f), (30,  0x98b1), (31,  0x98b2), (32,  0x98b3), (33,  0x9653), (34,  0x98b4), (36,  0x8cf0), 
                 (37,  0x88e5), (38,  0x9692), (40,  0x8b9c), (43,  0x8b9d), (44,  0x8b9e), (45,  0x92e0), (46,  0x97ba), (48,  0x98b5), 
                 (51,  0x98b6), (54,  0x98b7), (58,  0x906c), (64,  0x8f59), (65,  0x906d), (66,  0x98bc), (68,  0x98ba), (70,  0x98bb), 
                 (71,  0x8b77), (74,  0x8da1), (75,  0x89ee), (77,  0x98b9), (78,  0x98b8), (79,  0x95a7), (84,  0x8e65), (85,  0x8e64), 
                 (86,  0x91bc), (87,  0x98bd), (88,  0x9574), (89,  0x90e5), (93,  0x8157), (94,  0x98be), (95,  0x98c0), (97,  0xfa69), 
                 (99,  0x91e3), (100, 0x97df), (101, 0x88c8), (109, 0x98bf), (110, 0x89bc), (112, 0x8bc2), (114, 0x9287), (118, 0x8c8f), 
                 (119, 0x98c1), (123, 0x9443), (124, 0xfa6a) ],
        23 => &[ (0,   0xfa6b), (1,   0x8ae9), (3,   0xfa6c), (9,   0x98c2), (10,  0x88c9), (13,  0x8cde), (14,  0x8aea), (15,  0x959a), 
                 (16,  0x94b0), (17,  0x8b78), (26,  0x89ef), (28,  0x98e5), (29,  0x9360), (47,  0x948c), (48,  0x98c4), (52,  0x94ba), 
                 (54,  0x97e0), (56,  0x904c), (57,  0xfa6d), (58,  0x8e66), (60,  0x8e97), (61,  0x89be), (67,  0x92cf), (70,  0x9241), 
                 (71,  0x98c8), (77,  0x88ca), (78,  0x92e1), (79,  0x8f5a), (80,  0x8db2), (81,  0x9743), (83,  0x91cc), (85,  0x89bd), 
                 (86,  0xfa6e), (87,  0x98c7), (89,  0x975d), (90,  0x98c3), (91,  0x98c5), (92,  0x8dec), (93,  0x98c6), (94,  0x9b43), 
                 (105, 0x98ce), (111, 0x98d1), (112, 0x98cf), (115, 0x89c0), (117, 0x95b9), (118, 0x98c9), (123, 0x98cd), (124, 0x8cf1), 
                 (127, 0x8e67) ],
        24 => &[ (3,   0x8aa4), (6,   0x98d2), (8,   0x98ca), (10,  0xfa70), (11,  0x97e1), (13,  0x8e98), (15,  0x98cb), (17,  0x98d0), 
                 (18,  0xfa6f), (20,  0xfa72), (22,  0x98d3), (24,  0x98cc), (26,  0xfa71), (27,  0x8b9f), (29,  0x88cb), (32,  0x8ba0), 
                 (33,  0x89bf), (43,  0x9b44), (45,  0x9699), (46,  0x958e), (47,  0x8cf2), (53,  0x904e), (54,  0x97b5), (63,  0x95d6), 
                 (66,  0x8c57), (67,  0x91a3), (68,  0x89e2), (73,  0xfa61), (74,  0x8f72), (77,  0xfa73), (78,  0x98d7), (80,  0x98dc), 
                 (81,  0x98da), (84,  0x98d5), (87,  0x91ad), (88,  0x98d8), (90,  0x98db), (91,  0x98d9), (93,  0x95db), (95,  0x98d6), 
                 (97,  0x904d), (99,  0x9693), (100, 0x98dd), (101, 0x98de), (110, 0x8f43), (111, 0x98eb), (115, 0x946f), (117, 0x9555), 
                 (118, 0x98e6), (120, 0x95ee), (122, 0x89b4), (126, 0x98ea), (127, 0xfa76) ],
        25 => &[ (5,   0x98e4), (6,   0x98ed), (9,   0x9171), (11,  0x8cc2), (13,  0x947b), (15,  0xe0c5), (17,  0x98ec), (18,  0x937c), 
                 (20,  0x98e1), (22,  0x8cf4), (25,  0x8cf3), (26,  0x98df), (30,  0xfa77), (31,  0x8ed8), (33,  0x98e7), (34,  0xfa75), 
                 (35,  0x95ed), (36,  0x926c), (37,  0x98e3), (38,  0x8c91), (40,  0x98e0), (41,  0x98e8), (42,  0x98e2), (43,  0x97cf), 
                 (44,  0x98e9), (45,  0x9860), (54,  0x8be4), (57,  0x8c90), (64,  0xfa74), (66,  0xfa7a), (67,  0x98ee), (70,  0xfa78), 
                 (71,  0x98ef), (72,  0x98f3), (73,  0x88cc), (79,  0x95ce), (80,  0x98f2), (85,  0x98f1), (86,  0x98f5), (90,  0x98f4), 
                 (92,  0x92e2), (101, 0x8c92), (108, 0x98f6), (112, 0xfa79), (114, 0x8ec3), (116, 0x91a4), (117, 0x92e3), (118, 0x8bf4), 
                 (120, 0x98f7), (125, 0x8b55) ],
        26 => &[ (0,   0x98f8), (5,   0x98fa), (13,  0x9654), (17,  0x8c86), (20,  0xfa7b), (24,  0x8e50), (25,  0x94f5), (26,  0x98f9), 
                 (44,  0x8dc3), (45,  0x9762), (50,  0x98fc), (51,  0x9942), (52,  0x98fb), (53,  0x8dc2), (55,  0x8f9d), (62,  0x8c58), 
                 (66,  0x9943), (69,  0x8bcd), (73,  0x9940), (74,  0x9941), (77,  0x93ad), (79,  0x919c), (81,  0x8ba1), (85,  0x966c), 
                 (86,  0x9944), (88,  0xfa7d), (90,  0x97bb), (94,  0x9945), (99,  0x9948), (101, 0x9946), (103, 0x916d), (109, 0x9947), 
                 (110, 0x9949), (116, 0xfa7c), (117, 0x994b), (121, 0x994a), (123, 0x95c6) ],
        27 => &[ (0,   0x8b56), (1,   0x994d), (2,   0x994e), (4,   0x89ad), (9,   0x994c), (18,  0x8ef2), (20,  0x9951), (21,  0x9950), 
                 (22,  0x994f), (24,  0x98d4), (26,  0x9952), (31,  0x8f9e), (33,  0x9953), (42,  0x9744), (50,  0x96d7), (55,  0x9955), 
                 (58,  0x9954), (59,  0x9957), (60,  0x9956), (63,  0x9958), (64,  0x9959), (65,  0x88f2), (67,  0x8cb3), (68,  0x8c5a), 
                 (69,  0x8f5b), (70,  0x929b), (71,  0x8ba2), (72,  0x90e6), (73,  0x8cf5), (74,  0xfa7e), (75,  0x8d8e), (76,  0x995b), 
                 (77,  0x96c6), (78,  0x9365), (80,  0x8e99), (82,  0x995a), (84,  0x995c), (90,  0x937d), (92,  0x8a95), (98,  0x995d), 
                 (100, 0xfa80), (101, 0x93fc), (104, 0x9153), (105, 0x995f), (106, 0x9960), (107, 0x94aa), (108, 0x8cf6), (109, 0x985a), 
                 (110, 0x9961), (113, 0x8ba4), (117, 0x95ba), (118, 0x91b4), (119, 0x8bef), (120, 0x9354), (124, 0x8c93) ],
        28 => &[ (0,   0x9962), (2,   0x9963), (5,   0x93e0), (6,   0x897e), (9,   0x9966), (10,  0x8dfb), (12,  0x9965), (13,  0x8dc4), 
                 (15,  0x9967), (16,  0xe3ec), (17,  0x9968), (18,  0x9660), (19,  0x9969), (21,  0x996a), (22,  0x996b), (23,  0x8fe7), 
                 (25,  0x8eca), (29,  0xfa81), (32,  0x8aa5), (34,  0x996e), (36,  0x996c), (37,  0x96bb), (38,  0x996d), (40,  0x9579), 
                 (41,  0x996f), (42,  0x9970), (43,  0x9971), (44,  0x937e), (48,  0x9975), (49,  0x9973), (50,  0x9974), (51,  0x9972), 
                 (52,  0x8de1), (53,  0x9976), (54,  0x96e8), (55,  0x97e2), (61,  0x9977), (62,  0xfa82), (68,  0x90a6), (69,  0x9978), 
                 (70,  0x8f79), (73,  0x9979), (75,  0x929c), (76,  0x97bd), (77,  0x9380), (86,  0x99c3), (91,  0x997a), (92,  0xeaa3), 
                 (93,  0x8bc3), (96,  0x997b), (97,  0x967d), (102, 0x8f88), (103, 0x91fa), (105, 0x997d), (106, 0x93e2), (108, 0xfa83), 
                 (109, 0x997e), (112, 0x9980), (113, 0x8a4d), (117, 0x9981), (118, 0x8ba5), (120, 0x93ca), (121, 0x899a), (122, 0x8f6f), 
                 (125, 0x949f), (126, 0x9982) ],
        29 => &[ (0,   0x9381), (3,   0x906e), (4,   0x9983), (6,   0x95aa), (7,   0x90d8), (8,   0x8aa0), (10,  0x8aa7), (11,  0x9984), 
                 (14,  0x9986), (17,  0x8c59), (20,  0x9985), (21,  0xfa84), (23,  0x97f1), (29,  0x8f89), (36,  0x94bb), (37,  0x95ca), 
                 (39,  0x9987), (41,  0x9798), (42,  0x9988), (46,  0x9989), (48,  0x939e), (51,  0x998a), (54,  0x90a7), (55,  0x8dfc), 
                 (56,  0x8c94), (57,  0x998b), (58,  0x8e68), (59,  0x8d8f), (67,  0x92e4), (68,  0x998d), (71,  0x91a5), (74,  0x8ded), 
                 (75,  0x998e), (76,  0x998f), (77,  0x914f), (79,  0x998c), (84,  0x9991), (86,  0x9655), (91,  0x8d84), (94,  0x9990), 
                 (99,  0x8c95), (100, 0x8ddc), (101, 0x948d), (105, 0x9994), (106, 0x9992), (111, 0x959b), (112, 0x8fe8), (113, 0x999b), 
                 (114, 0x8a84), (115, 0x9995), (116, 0x9993), (117, 0x916e), (125, 0x9997), (127, 0x9996) ],
        30 => &[ (3,   0x8a63), (7,   0x8c80), (8,   0x999c), (9,   0x97ab), (13,  0x9998), (17,  0x999d), (18,  0x999a), (20,  0x9999), 
                 (27,  0x97cd), (28,  0xfa85), (31,  0x8cf7), (32,  0x89c1), (35,  0x97f2), (38,  0xfa86), (41,  0x8f95), (42,  0x9377), 
                 (43,  0x8d85), (44,  0x99a0), (45,  0x99a1), (47,  0xfb77), (49,  0x97e3), (52,  0x984a), (53,  0x99a3), (57,  0x8cf8), 
                 (60,  0x99a2), (62,  0x8a4e), (64,  0xfa87), (65,  0x99a4), (67,  0x9675), (69,  0x92ba), (71,  0x9745), (73,  0x95d7), 
                 (77,  0x99a5), (82,  0xe8d3), (85,  0x93ae), (87,  0x99a6), (88,  0x8aa8), (89,  0x96b1), (91,  0xfa88), (93,  0x8f9f), 
                 (94,  0x99a7), (95,  0x95e5), (96,  0x99ab), (98,  0x90a8), (99,  0x99a8), (100, 0x8bce), (102, 0x99a9), (103, 0x8aa9), 
                 (114, 0x8c4d), (115, 0x99ac), (117, 0x99ad), (120, 0x99ae), (121, 0x99af), (122, 0x8ed9), (126, 0x8cf9), (127, 0x96dc), 
                 ],
        31 => &[ (0,   0xfa89), (1,   0x96e6), (2,   0x93f5), (5,   0x95ef), (6,   0x99b0), (7,   0xfa8a), (8,   0x99b1), (13,  0x99b3), 
                 (15,  0x99b5), (16,  0x99b4), (21,  0x99b6), (22,  0x89bb), (23,  0x966b), (25,  0x8dfa), (26,  0x99b7), (29,  0x9178), 
                 (32,  0x8fa0), (33,  0x8ba7), (35,  0x99b8), (36,  0xfa8b), (42,  0x94d9), (47,  0x99b9), (49,  0x99ba), (51,  0x99bb), 
                 (56,  0x99bc), (57,  0x9543), (58,  0x8be6), (59,  0x88e3), (63,  0x93bd), (64,  0x99bd), (65,  0x8f5c), (67,  0x90e7), 
                 (69,  0x99bf), (70,  0x99be), (71,  0x8fa1), (72,  0x8cdf), (73,  0x99c1), (74,  0x94bc), (77,  0x99c2), (81,  0x94da), 
                 (82,  0x91b2), (83,  0x91ec), (84,  0x8ba6), (87,  0x93ec), (88,  0x9250), (90,  0x948e), (92,  0x966d), (94,  0x99c4), 
                 (96,  0x90e8), (102, 0x8c54), (105, 0x99c5), (110, 0x99c6), (111, 0x894b), (112, 0x88f3), (113, 0x8aeb), (114, 0xfa8c), 
                 (115, 0x91a6), (116, 0x8b70), (117, 0x9791), (119, 0x99c9), (120, 0x89b5), (123, 0x99c8), (127, 0x8ba8) ],
        32 => &[ (2,   0x99ca), (4,   0x96ef), (19,  0xfa8d), (22,  0x99cb), (24,  0x97d0), (26,  0x8cfa), (31,  0x8cb4), (32,  0x99cc), 
                 (37,  0x99ce), (38,  0x99cd), (40,  0x907e), (41,  0x8958), (45,  0x897d), (46,  0x99cf), (48,  0x99d0), (50,  0xfa8e), 
                 (51,  0x8cb5), (54,  0x99d1), (59,  0x8b8e), (66,  0x8e51), (67,  0x99d2), (72,  0x9694), (73,  0x8db3), (74,  0x8b79), 
                 (75,  0x9746), (76,  0x916f), (77,  0x94bd), (78,  0x8efb), (84,  0x8f66), (86,  0x8ee6), (87,  0x8ef3), (89,  0x8f96), 
                 (91,  0x94be), (93,  0xfa8f), (95,  0x99d5), (97,  0x8962), (98,  0x9170), (99,  0x8cfb), (100, 0x8cc3), (101, 0x8be5), 
                 (104, 0x99d9), (105, 0x9240), (106, 0x91fc), (107, 0x8ba9), (108, 0x8fa2), (109, 0x99da), (110, 0x99d8), (111, 0x89c2), 
                 (112, 0x91e4), (113, 0x8eb6), (114, 0x8e6a), (115, 0x8945), (118, 0x8a90), (119, 0x8d86), (120, 0x8e69), (122, 0x99db), 
                 ],
        33 => &[ (1,   0x99dc), (3,   0x8b68), (4,   0x8a65), (8,   0x8d87), (9,   0x8b67), (10,  0x92dd), (11,  0x8944), (12,  0x93af), 
                 (13,  0x96bc), (14,  0x8d40), (15,  0x9799), (16,  0x9366), (17,  0x8cfc), (27,  0x8c4e), (29,  0x99e5), (31,  0x8be1), 
                 (32,  0x9669), (38,  0x94db), (41,  0x99e4), (43,  0x8adc), (44,  0x99df), (45,  0x99e0), (46,  0x99e2), (54,  0x99e3), 
                 (56,  0x8b7a), (57,  0x9081), (59,  0x95ab), (60,  0x99e1), (61,  0x99dd), (62,  0x8ce1), (64,  0x99de), (66,  0x9843), 
                 (70,  0x95f0), (72,  0x92e6), (73,  0x8ce0), (74,  0x8d90), (78,  0x99e6), (81,  0x93db), (95,  0x99ea), (104, 0x8efc), 
                 (106, 0x8ef4), (112, 0x99ed), (113, 0x99eb), (115, 0x96a1), (117, 0x99e8), (118, 0x99f1), (119, 0x99ec), (123, 0x99ef), 
                 (124, 0x8cc4), (125, 0x96bd) ],
        34 => &[ (0,   0x99f0), (4,   0x99f2), (6,   0x99f4), (10,  0xfa92), (11,  0x8dee), (12,  0x9861), (14,  0x99e9), (15,  0x99e7), 
                 (16,  0x99f3), (18,  0x99ee), (28,  0xfa91), (34,  0x99f6), (36,  0x9a42), (37,  0x99f8), (40,  0x99fc), (41,  0xfa93), 
                 (43,  0x9a40), (44,  0x99f9), (47,  0x9a5d), (50,  0x8de7), (51,  0x8a50), (56,  0x99f7), (60,  0x9a44), (61,  0x88f4), 
                 (62,  0x9a43), (64,  0x88a3), (65,  0x9569), (66,  0x9a41), (68,  0x99fa), (71,  0x99f5), (72,  0x99fb), (73,  0x8dc6), 
                 (88,  0x9a45), (97,  0x88f5), (98,  0x9a4e), (101, 0x9a46), (102, 0x9a47), (104, 0x8fa3), (105, 0x9689), (109, 0x9a4c), 
                 (110, 0x9a4b), (114, 0x934e), (122, 0x9a4d), (125, 0x9a4a), (127, 0xfa94) ],
        35 => &[ (4,   0x8953), (6,   0x8db4), (7,   0x904f), (15,  0x9a48), (16,  0x9382), (20,  0x9a49), (22,  0x88a0), (46,  0x9a53), 
                 (47,  0x9742), (49,  0x8fa5), (51,  0x9a59), (56,  0x9a58), (57,  0x9a4f), (62,  0x91c1), (64,  0x9a50), (68,  0x91ed), 
                 (69,  0x9a55), (70,  0x8fa4), (76,  0x9a52), (79,  0x96e2), (83,  0x8c5b), (86,  0x9a56), (87,  0x9a57), (92,  0x9a54), 
                 (93,  0x9a5a), (99,  0x9a51), (123, 0x9a60), (124, 0x9a65), (126, 0x9a61) ],
        36 => &[ (0,   0x9a5c), (3,   0x9a66), (4,   0x9150), (6,   0xfa95), (7,   0x9a68), (9,   0x8d41), (10,  0x9a5e), (11,  0x929d), 
                 (24,  0x9a62), (25,  0x9a5b), (26,  0x8aab), (28,  0x8aec), (29,  0x8a85), (30,  0x9a63), (31,  0x9a5f), (39,  0x8c96), 
                 (40,  0x9a69), (41,  0x9a67), (42,  0x9172), (43,  0x8b69), (44,  0x8baa), (46,  0x9a64), (48,  0x8bf2), (54,  0x8963), 
                 (68,  0x9a6d), (69,  0x9a6b), (71,  0x9aa5), (84,  0x9a70), (90,  0x9a6a), (92,  0x9a6e), (95,  0x9a6c), (99,  0x8e6b), 
                 (100, 0x9a6f), (119, 0x9a72), (121, 0x9a77), (125, 0x9a75), (126, 0x9a74) ],
        37 => &[ (6,   0x9251), (9,   0x89c3), (20,  0x9a71), (22,  0x9a73), (23,  0x8fa6), (24,  0x8952), (27,  0x9a76), (41,  0x89dc), 
                 (47,  0x9a82), (49,  0x8ffa), (50,  0x9a7d), (52,  0x9a7b), (54,  0x9a7c), (56,  0x9a7e), (66,  0x895c), (76,  0x9158), 
                 (78,  0x9a78), (80,  0x9a79), (91,  0x8a9a), (100, 0x9a81), (104, 0x8aed), (106, 0x9a84), (107, 0x9a80), (108, 0x9a83), 
                 (116, 0x95ac), (120, 0x93d3), (122, 0x94b6) ],
        38 => &[ (0,   0x9a86), (6,   0x9a85), (7,   0x8a64), (10,  0x9a87), (15,  0x9a8a), (20,  0x9a89), (32,  0x9a88), (34,  0x9458), 
                 (37,  0x9a8b), (46,  0x9a8c), (52,  0x9a8e), (54,  0x9a8d), (60,  0x9a90), (64,  0x9a93), (65,  0x9a91), (66,  0x9a8f), 
                 (67,  0x9a92), (72,  0x9a94), (78,  0x9a95), (81,  0x9a96), (83,  0x9a97), (87,  0x9a98), (88,  0x9964), (90,  0x8efa), 
                 (91,  0x8e6c), (94,  0x89f1), (96,  0x88f6), (99,  0x9263), (110, 0x9a99), (112, 0x8da2), (114, 0x88cd), (115, 0x907d), 
                 (121, 0x9a9a), (122, 0x8cc5), (125, 0x8d91), (127, 0x9a9c) ],
        39 => &[ (0,   0x9a9b), (3,   0x95de), (4,   0x9a9d), (8,   0x9a9f), (9,   0x9a9e), (11,  0x9aa0), (13,  0x9aa1), (15,  0x8c97), 
                 (18,  0x8980), (19,  0x9aa2), (22,  0x9aa4), (24,  0x9aa3), (28,  0x9aa6), (31,  0x9379), (38,  0x9aa7), (39,  0x88b3), 
                 (40,  0x8ddd), (45,  0x8c5c), (48,  0x926e), (55,  0x9aa8), (56,  0x9aa9), (59,  0x9aab), (64,  0x9aac), (66,  0x8de2), 
                 (71,  0x8bcf), (74,  0x9656), (78,  0x9aaa), (79,  0x9aad), (80,  0x8dbf), (81,  0x8d42), (89,  0xfa96), (97,  0x9ab1), 
                 (100, 0x8da3), (101, 0xfa97), (102, 0x9252), (105, 0x9aae), (106, 0x92d8), (127, 0x9ab2) ],
        40 => &[ (2,   0x9082), (8,   0x9ab0), (9,   0x9ab3), (11,  0x8c5e), (19,  0x9ab4), (32,  0x9ab5), (34,  0x8d43), (35,  0x8a5f), 
                 (36,  0x9ab7), (42,  0x9ab8), (44,  0xfa98), (48,  0x9ab9), (51,  0x9ab6), (64,  0x9aaf), (67,  0x9aba), (70,  0x9abb), 
                 (71,  0xfa9a), (72,  0xfa99), (75,  0x9684), (78,  0x8fe9), (82,  0x9abd), (83,  0x9abe), (84,  0x9abc), (86,  0x9ac0), 
                 (92,  0x9457), (95,  0x88e6), (96,  0x9575), (99,  0x9ac1), (116, 0x8ffb), (119, 0x8eb7), (121, 0x947c), (122, 0x8aee), 
                 (124, 0x8de9) ],
        41 => &[ (0,   0x9678), (2,   0x93b0), (5,   0x8c98), (6,   0x91cd), (10,  0x9abf), (11,  0x9ac2), (21,  0x91c2), (25,  0x9ac3), 
                 (29,  0x9ac4), (33,  0x9ac6), (36,  0x92e7), (42,  0x8aac), (47,  0xea9f), (48,  0x8981), (49,  0x95f1), (52,  0x8fea), 
                 (53,  0x9367), (58,  0x8de4), (61,  0x9acc), (64,  0x95bb), (65,  0x97db), (74,  0x89f2), (75,  0x9ac8), (81,  0x9159), 
                 (82,  0x9acb), (84,  0x9383), (87,  0x9368), (88,  0x9384), (89,  0x94b7), (90,  0x92cb), (94,  0x8dc7), (98,  0x9ac7), 
                 (105, 0x8996), (107, 0x9355), (112, 0x9ac9), (114, 0x9ac5), (117, 0x906f), (121, 0x9acd), (126, 0x8f6d) ],
        42 => &[ (3,   0x8bab), (5,   0x9ace), (19,  0x95e6), (23,  0x919d), (28,  0x92c4), (30,  0xfa9d), (31,  0x9ad0), (40,  0x966e), 
                 (43,  0x9ad1), (46,  0x9ad6), (50,  0xfa9e), (51,  0x95ad), (56,  0x9ad5), (57,  0x9acf), (58,  0x9ad2), (59,  0x9ad4), 
                 (62,  0x8da4), (65,  0x95c7), (69,  0x9ad7), (71,  0x9264), (74,  0x89f3), (76,  0x8feb), (81,  0x9ad9), (83,  0x9ad8), 
                 (85,  0x8d88), (87,  0x9ada), (88,  0x9adc), (89,  0x9adb), (92,  0x9ade), (94,  0x9ad3), (95,  0x9ae0), (100, 0x9adf), 
                 (101, 0x9add), (107, 0x8e6d), (108, 0x9070), (110, 0x9173), (111, 0x9ae1), (112, 0x90ba), (113, 0x88eb), (114, 0x9484), 
                 (119, 0x92d9), (121, 0x9ae3), (122, 0x9ae2), (123, 0x9ae4), (124, 0x9ae5), (125, 0x9ae6) ],
        43 => &[ (2,   0x9ae7), (9,   0x95cf), (10,  0x9ae8), (11,  0xfa9f), (15,  0x89c4), (16,  0x9ae9), (21,  0x975b), (22,  0x8a4f), 
                 (24,  0x99c7), (25,  0x8f67), (26,  0x91bd), (27,  0x9aea), (28,  0x96e9), (34,  0x96b2), (37,  0x9aec), (39,  0x91e5), 
                 (41,  0x9356), (42,  0x91be), (43,  0x9576), (44,  0x9aed), (45,  0x9aee), (46,  0x899b), (49,  0x8eb8), (50,  0x9aef), 
                 (55,  0x88ce), (56,  0x9af0), (62,  0x9af1), (68,  0x8982), (71,  0x8aef), (72,  0x93de), (73,  0x95f2), (78,  0x9af5), 
                 (79,  0x9174), (80,  0x9af4), (81,  0x8c5f), (83,  0xfaa0), (84,  0x967a), (85,  0x9af3), (87,  0x9385), (88,  0x9af7), 
                 (90,  0x9af6), (91,  0xfaa1), (93,  0xfaa2), (96,  0x9af9), (98,  0x9af8), (99,  0xfaa3), (101, 0x899c), (103, 0x9afa), 
                 (104, 0x8fa7), (105, 0x9afc), (106, 0x9244), (108, 0x9afb), (110, 0x95b1), (115, 0x8f97), (116, 0x937a), (120, 0x9b40), 
                 (125, 0x8d44) ],
        44 => &[ (1,   0x9b41), (2,   0x9440), (3,   0x94dc), (4,   0x96cf), (10,  0x9444), (13,  0x9b4a), (19,  0x8b57), (22,  0x9764), 
                 (25,  0x96ad), (27,  0x9baa), (29,  0x9b42), (35,  0x9b45), (36,  0xfaa4), (37,  0x91c3), (40,  0x9657), (44,  0x9369), 
                 (50,  0x9b46), (57,  0x9685), (58,  0xfaa5), (59,  0x8dc8), (62,  0x8fa8), (70,  0x9b47), (73,  0x8e6f), (75,  0x8e6e), 
                 (80,  0x88b7), (81,  0x8cc6), (83,  0x90a9), (84,  0x88cf), (89,  0x9b4b), (90,  0x9b4c), (92,  0x9b49), (101, 0x8957), 
                 (102, 0x8aad), (104, 0x9b48), (106, 0x96c3), (107, 0x9550), (118, 0x88a6), (123, 0x88f7), (127, 0x8e70) ],
        45 => &[ (1,   0x88d0), (3,   0x88a1), (9,   0x9b51), (17,  0x9b4f), (24,  0x96ba), (26,  0x9b52), (28,  0x9b50), (31,  0x9b4e), 
                 (32,  0x9050), (37,  0x9b4d), (41,  0x95d8), (47,  0x8ce2), (53,  0x9b56), (54,  0x9b57), (60,  0x8fa9), (64,  0x9b53), 
                 (65,  0x984b), (70,  0x946b), (73,  0x9b55), (90,  0x8da5), (98,  0x9b58), (102, 0x9577), (106, 0x9b59), (108, 0x9b54), 
                 (127, 0x96b9) ],
        46 => &[ (18,  0x947d), (26,  0x9b5a), (27,  0x9551), (60,  0x9b5b), (61,  0x9b5f), (62,  0x9b5c), (65,  0x89c5), (66,  0x9b5e), 
                 (73,  0x8eb9), (75,  0x9b5d), (76,  0x8c99), (80,  0x9b6b), (86,  0x9b64), (87,  0x9b61), (97,  0x9284), (99,  0x9b60), 
                 (102, 0x9b62), (105, 0x9b63), (122, 0x9b65), (123, 0x9b66) ],
        47 => &[ (9,   0x8af0), (11,  0x9b68), (12,  0x9b67), (22,  0x9b69), (34,  0x8fec), (42,  0x9b6c), (44,  0x92da), (48,  0x8964), 
                 (50,  0x9b6a), (54,  0x9b6d), (62,  0x9b6e), (64,  0x9b71), (67,  0x9b6f), (69,  0x9b70), (80,  0x8e71), (81,  0x9b72), 
                 (84,  0x8d45), (85,  0x9b73), (86,  0xfaa6), (87,  0x8e9a), (88,  0x91b6), (90,  0x9b74), (91,  0x9b75), (92,  0x8e79), 
                 (93,  0x8d46), (95,  0x96d0), (99,  0x8b47), (100, 0x8cc7), (101, 0x9b76), (102, 0x8a77), (105, 0x9b77), (107, 0x91b7), 
                 (112, 0x9b78), (113, 0x9ba1), (115, 0x9b79), (117, 0x9b7a), (120, 0x9b7b), (122, 0x9b7d) ],
        48 => &[ (0,   0x9b7e), (3,   0x9b80), (5,   0x91ee), (7,   0x8946), (8,   0x8ee7), (9,   0x88c0), (11,  0x9176), (12,  0x8aae), 
                 (13,  0x8eb3), (15,  0x8d47), (21,  0x9386), (23,  0x8f40), (24,  0x8aaf), (25,  0x9288), (26,  0x92e8), (27,  0x88b6), 
                 (28,  0x8b58), (29,  0x95f3), (31,  0x8ec0), (34,  0x8b71), (35,  0x90e9), (36,  0x8eba), (37,  0x9747), (38,  0x9b81), 
                 (46,  0x8b7b), (48,  0x8dc9), (51,  0x8a51), (52,  0x8983), (53,  0x8faa), (54,  0x89c6), (56,  0x9b82), (57,  0x9765), 
                 (63,  0x8f68), (64,  0xfaa7), (66,  0x8ee2), (67,  0x9b83), (68,  0x8af1), (69,  0x93d0), (70,  0x96a7), (71,  0x9b84), 
                 (73,  0x9b85), (76,  0x9578), (80,  0x9b87), (82,  0x8aa6), (83,  0x8bf5), (84,  0x9b86), (88,  0xfaa9), (91,  0x8ab0), 
                 (93,  0x9051), (94,  0x9b8b), (95,  0x8e40), (97,  0x89c7), (98,  0x9b8a), (100, 0x9b88), (101, 0x9b8c), (102, 0x9b89), 
                 (103, 0x944a), (104, 0x9ecb), (105, 0x9052), (107, 0x9b8d), (108, 0xfaaa), (110, 0x97be), (112, 0x9b8e), (115, 0x9b90), 
                 (117, 0x929e), (118, 0x9b8f), (120, 0x90a1), (122, 0x8e9b), (126, 0x91ce), (127, 0x8ef5) ],
        49 => &[ (1,   0x9595), (2,   0x90ea), (4,   0x8ecb), (5,   0x9b91), (6,   0x8fab), (7,   0x9b92), (8,   0x9b93), (9,   0x88d1), 
                 (10,  0x91b8), (11,  0x9071), (13,  0x9b94), (14,  0x93b1), (15,  0x8fac), (17,  0x8fad), (19,  0x9b95), (22,  0x90eb), 
                 (26,  0x8fae), (30,  0xfaab), (32,  0x9b96), (34,  0x9b97), (36,  0x96de), (40,  0x9b98), (45,  0x8bc4), (49,  0x8f41), 
                 (56,  0x9b99), (57,  0x9b9a), (58,  0x8eda), (59,  0x904b), (60,  0x93f2), (61,  0x9073), (62,  0x94f6), (63,  0x9441), 
                 (64,  0x8bc7), (65,  0x9b9b), (69,  0x8b8f), (70,  0x9b9c), (72,  0x8bfc), (74,  0x93cd), (75,  0x89ae), (77,  0x8e72), 
                 (78,  0x9b9d), (79,  0x9ba0), (80,  0x9b9f), (81,  0x8bfb), (83,  0x9b9e), (85,  0x9357), (94,  0x91ae), (96,  0x936a), 
                 (97,  0x8ec6), (100, 0x9177), (101, 0x979a), (108, 0x9ba2), (110, 0x9ba3), (111, 0x93d4), (113, 0x8e52), (118, 0x9ba5), 
                 (121, 0x9ba6) ],
        50 => &[ (12,  0x9ba7), (16,  0x8af2), (17,  0x9ba8), (20,  0x9ba9), (33,  0x89aa), (38,  0xfaac), (40,  0x915a), (41,  0x8ae2), 
                 (43,  0x9bab), (44,  0x96a6), (49,  0x91d0), (51,  0x8a78), (54,  0x9bad), (55,  0x9baf), (56,  0x8add), (58,  0xfaad), 
                 (59,  0x9bac), (60,  0x9bae), (62,  0x9bb1), (69,  0x9bb0), (71,  0x9bb2), (89,  0x9bb3), (96,  0x93bb), (97,  0x8bac), 
                 (104, 0x89e3), (105, 0x9bb4), (106, 0x9bb9), (109, 0x9bb7), (111, 0x95f5), (112, 0x95f4), (117, 0xfaae), (118, 0x9387), 
                 (122, 0x9bb6), (123, 0x8f73), (125, 0x9bb5) ],
        51 => &[ (7,   0x9092), (11,  0x9bba), (14,  0x8de8), (17,  0x9bc0), (20,  0x9bc1), (21,  0x9bbb), (22,  0x8a52), (23,  0x9bbc), 
                 (24,  0x9bc5), (25,  0x9bc4), (26,  0x9bc3), (27,  0x9bbf), (31,  0x9bbe), (34,  0x9bc2), (39,  0xfaaf), (41,  0x95f6), 
                 (66,  0xfab2), (75,  0x9bc9), (76,  0x9bc6), (78,  0x9bc8), (80,  0x9792), (82,  0x9bc7), (83,  0xfab0), (92,  0x9bbd), 
                 (105, 0x9093), (108, 0x9bca), (109, 0xfab3), (111, 0x8db5), (115, 0x9bcb), (118, 0x9bcc) ],
        52 => &[ (2,   0x9bcf), (4,   0x9bce), (7,   0x9bcd), (11,  0x9388), (12,  0x9bb8), (16,  0x9bd5), (29,  0x9bd1), (34,  0x9bd0), 
                 (44,  0x9bd2), (46,  0x9bd3), (55,  0x9bd6), (56,  0xfab4), (57,  0xfab5), (58,  0x97e4), (60,  0x9bd7), (61,  0x9bd4), 
                 (73,  0x9bd8), (76,  0x8ade), (77,  0x9bd9), (80,  0xfab6), (82,  0x9bdb), (83,  0x9bda), (86,  0x9bdc), (91,  0x9bdd), 
                 (93,  0x90ec), (94,  0x8f42), (97,  0x8f84), (99,  0x9183), (101, 0x8d48), (102, 0x8db6), (103, 0x8d49), (104, 0x8b90), 
                 (107, 0x9bde), (110, 0x8db7), (113, 0x8cc8), (114, 0x9bdf), (115, 0x96a4), (116, 0x9462), (117, 0x9be0), (119, 0x8d4a), 
                 (123, 0x8aaa), (125, 0x9246), (126, 0x8bd0) ],
        53 => &[ (2,   0x8e73), (3,   0x957a), (6,   0x94bf), (11,  0x9be1), (12,  0x8af3), (17,  0x9be4), (22,  0x929f), (25,  0x9be3), 
                 (26,  0x9be2), (27,  0x9be5), (29,  0x92e9), (37,  0x9083), (43,  0x8e74), (45,  0x90c8), (47,  0x91d1), (48,  0x8b41), 
                 (51,  0x92a0), (54,  0x9be6), (55,  0x9be7), (56,  0x8fed), (61,  0x9658), (64,  0x9bea), (67,  0x9be9), (68,  0x9be8), 
                 (69,  0x959d), (71,  0x9bf1), (76,  0x9679), (78,  0x9beb), (84,  0x9bed), (85,  0x968b), (87,  0x9bec), (95,  0x9bee), 
                 (97,  0x94a6), (98,  0x9bef), (99,  0x95bc), (100, 0x9bf0), (114, 0x8ab1), (115, 0x95bd), (116, 0x944e), (117, 0x9bf2), 
                 (118, 0x9bf3), (120, 0x8d4b), (121, 0x8ab2), (122, 0x9bf4), (123, 0x8cb6), (124, 0x9763), (125, 0x9748), (126, 0x8af4), 
                 (127, 0x9bf6) ],
        54 => &[ (1,   0x92a1), (3,   0x8d4c), (4,   0x8faf), (7,   0x94dd), (10,  0x8fb0), (15,  0x8f98), (21,  0x92ea), (22,  0x95f7), 
                 (23,  0x9358), (26,  0x8d4d), (28,  0x957b), (32,  0x9bf7), (38,  0x9378), (39,  0x8dc0), (43,  0x8cc9), (45,  0x92eb), 
                 (53,  0x88c1), (54,  0x8f8e), (55,  0x8d4e), (56,  0x9766), (65,  0x9bf8), (66,  0x9bf9), (67,  0x9470), (72,  0x9bfa), 
                 (73,  0x97f5), (74,  0x984c), (79,  0x9bfc), (80,  0x9bfb), (83,  0x8a66), (86,  0x9c40), (90,  0x9c43), (91,  0x9c44), 
                 (93,  0x9c42), (95,  0x955f), (96,  0x8fb1), (97,  0x9c46), (98,  0x9c45), (99,  0x9c41), (104, 0x9c47), (105, 0x9c48), 
                 (108, 0x9c49), (112, 0x9c4c), (113, 0x9c4a), (115, 0x9c4b), (116, 0x9c4d), (118, 0x8984), (119, 0x92ec), (120, 0x9c4e), 
                 (122, 0x8c9a), (123, 0x89f4), (124, 0x9455), (126, 0x9c4f), (127, 0x93f9) ],
        55 => &[ (1,   0x95d9), (3,   0x9c50), (4,   0x984d), (9,   0x9c51), (10,  0x95be), (11,  0x9c54), (12,  0x989f), (13,  0x98af), 
                 (15,  0x8eae), (16,  0x93f3), (17,  0x9c55), (19,  0x8b7c), (20,  0x92a2), (21,  0x88f8), (22,  0x9c56), (23,  0x95a4), 
                 (24,  0x8d4f), (27,  0x926f), (31,  0x92ed), (33,  0xfab7), (37,  0x96ed), (38,  0x8cb7), (39,  0x8cca), (41,  0x9c57), 
                 (45,  0x9c58), (47,  0x9c5e), (49,  0x8ee3), (52,  0xfab8), (53,  0x92a3), (55,  0x8bad), (56,  0x9c59), (60,  0x954a), 
                 (62,  0x9265), (65,  0x9c5a), (69,  0xfa67), (72,  0x9c5b), (74,  0x8bae), (76,  0x9c5c), (78,  0x9c5d), (81,  0x9c5f), 
                 (83,  0x9396), (86,  0x9c60), (87,  0x9c61), (89,  0x9c62), (92,  0x9c53), (93,  0x9c52), (97,  0x9c63), (98,  0x8c60), 
                 (102, 0x9546), (103, 0xfab9), (105, 0x8dca), (106, 0x9556), (107, 0x92a4), (108, 0x956a), (109, 0x9c64), (112, 0x8fb2), 
                 (113, 0x8965), (115, 0x9c65), (119, 0x9c66), (121, 0x96f0), (124, 0x94de), (127, 0x9c69) ],
        56 => &[ (0,   0x899d), (1,   0x90aa), (2,   0x9c68), (3,   0x9c67), (4,   0x8c61), (5,   0x91d2), (7,   0x9c6d), (8,   0x9c6b), 
                 (10,  0x9c6a), (11,  0x97a5), (12,  0x8ce3), (16,  0x8f99), (17,  0x9c6c), (18,  0x936b), (19,  0x8f5d), (23,  0x93be), 
                 (24,  0x9c70), (25,  0x9c6f), (30,  0x9c6e), (32,  0x9c71), (33,  0x8ce4), (40,  0x9c72), (41,  0x959c), (42,  0x8f7a), 
                 (45,  0x9c73), (46,  0x94f7), (51,  0x93bf), (52,  0x92a5), (55,  0xfaba), (57,  0x934f), (60,  0x9c74), (61,  0x8b4a), 
                 (67,  0x9053), (69,  0x954b), (76,  0x8af5), (77,  0x9445), (86,  0x9c75), (87,  0x8e75), (88,  0x9659), (89,  0x965a), 
                 (92,  0x899e), (93,  0x9c7a), (94,  0xfabb), (96,  0x9289), (100, 0x9c77), (107, 0x89f5), (112, 0x9cab), (113, 0x9c79), 
                 (117, 0x944f), (120, 0x9c78), (123, 0x9c76), (125, 0x8d9a), (127, 0x9c7c) ],
        57 => &[ (14,  0x9c83), (15,  0x9c89), (16,  0x9c81), (18,  0x937b), (21,  0x9c86), (22,  0x957c), (25,  0x9c80), (27,  0x9c85), 
                 (28,  0x97e5), (29,  0x8e76), (32,  0x91d3), (33,  0x9c7d), (37,  0x8b7d), (38,  0x9c88), (39,  0x90ab), (40,  0x8985), 
                 (41,  0x9c82), (42,  0x89f6), (43,  0x9c87), (47,  0x8baf), (49,  0x9c84), (58,  0x9c8a), (65,  0x9c8c), (66,  0x9c96), 
                 (67,  0x9c94), (70,  0x9c91), (74,  0x9c90), (75,  0x97f6), (77,  0x9c92), (80,  0x8bb0), (82,  0x8d50), (85,  0x8f9a), 
                 (89,  0x9c99), (90,  0x9c8b), (93,  0xfabc), (95,  0x9c8f), (96,  0x9c7e), (98,  0x89f8), (99,  0x9c93), (100, 0x9c95), 
                 (101, 0x9270), (104, 0x8da6), (105, 0x89b6), (106, 0x9c8d), (107, 0x9c98), (108, 0x9c97), (109, 0x8bb1), (111, 0x91a7), 
                 (112, 0x8a86), (117, 0x8c62), (119, 0x9c8e) ],
        58 => &[ (1,   0x9c9a), (3,   0x9c9d), (4,   0x9c9f), (5,   0xfabd), (9,   0x8ebb), (10,  0xfabe), (11,  0x9ca5), (12,  0x92ee), 
                 (13,  0x9c9b), (18,  0x9ca3), (20,  0x89f7), (22,  0x9ca1), (23,  0x9ca2), (26,  0x9c9e), (27,  0x9ca0), (31,  0x8ce5), 
                 (32,  0x9749), (35,  0x8ab3), (38,  0x8978), (39,  0x9ca4), (41,  0x9459), (42,  0x88ab), (50,  0x94df), (51,  0x9c7b), 
                 (52,  0x9caa), (53,  0x9cae), (54,  0x96e3), (56,  0x9ca7), (60,  0x9389), (61,  0x9cac), (69,  0x8fee), (70,  0x9cad), 
                 (71,  0x93d5), (81,  0x9866), (83,  0x9ca9), (85,  0xfac0), (88,  0x9caf), (90,  0x8d9b), (92,  0x90c9), (94,  0xfabf), 
                 (95,  0x88d2), (96,  0x9ca8), (97,  0x9ca6), (99,  0x9179), (103, 0x9c9c), (104, 0x8e53), (112, 0x91c4), (113, 0x9cbb), 
                 (114, 0xfac2), (115, 0x917a), (116, 0x9cb6), (118, 0x9cb3), (119, 0x9cb4), (121, 0x8ee4), (122, 0x9cb7), (123, 0x9cba) ],
        59 => &[ (0,   0x9cb5), (1,   0x8f44), (3,   0x9cb8), (6,   0x9cb2), (8,   0x96fa), (9,   0x96f9), (13,  0x9cbc), (14,  0x9cbd), 
                 (15,  0x88d3), (17,  0xfac3), (21,  0x9cb1), (26,  0x8bf0), (27,  0x88a4), (31,  0x8ab4), (32,  0xfac1), (33,  0x9cb9), 
                 (39,  0x9cc1), (40,  0x9cc0), (44,  0x9cc5), (48,  0xfac5), (52,  0x9cc6), (55,  0xfac4), (60,  0x9cc4), (61,  0x9cc7), 
                 (62,  0x9cbf), (63,  0x9cc3), (66,  0x9cc8), (68,  0x9cc9), (71,  0x9cbe), (72,  0x8e9c), (74,  0x9cc2), (75,  0x91d4), 
                 (76,  0x8d51), (77,  0x9cb0), (78,  0x9054), (83,  0x9cd6), (85,  0x95e7), (88,  0x9ccc), (89,  0x9ccd), (90,  0x9cce), 
                 (93,  0x9cd5), (95,  0x9cd4), (98,  0x969d), (99,  0x8ab5), (101, 0x9cd2), (103, 0x8c64), (104, 0x8a53), (107, 0x9ccf), 
                 (110, 0x97b6), (111, 0x9cd1), (112, 0x88d4), (113, 0x9cd3), (115, 0x9cca), (116, 0x9cd0), (117, 0x9cd7), (118, 0x8c63), 
                 (119, 0x9ccb), (126, 0x977c) ],
        60 => &[ (2,   0x974a), (7,   0x9cda), (10,  0x9cde), (14,  0x919e), (16,  0x97f7), (17,  0x9cdf), (20,  0x9cdc), (22,  0x9cd9), 
                 (24,  0xfac6), (25,  0x9cd8), (26,  0x9cdd), (36,  0x95ae), (39,  0x93b2), (41,  0x8c65), (43,  0x9ce0), (44,  0x9cdb), 
                 (46,  0x9ce1), (50,  0x8c9b), (54,  0x89af), (58,  0x9ce9), (62,  0x8ab6), (67,  0x9ce7), (70,  0x9ce8), (71,  0x8da7), 
                 (72,  0x9ce6), (73,  0x9ce4), (74,  0x9ce3), (75,  0x9cea), (76,  0x9ce2), (77,  0x9cec), (80,  0x89f9), (99,  0x9cee), 
                 (102, 0x9ced), (114, 0x92a6), (116, 0x9cf1), (118, 0x9cef), (119, 0x9ce5), (120, 0x8c9c), (122, 0x9cf0), (124, 0x9cf4), 
                 (125, 0x9cf3), (126, 0x9cf5), (127, 0x9cf2) ],
        61 => &[ (0,   0x9cf6), (8,   0x9cf7), (9,   0x9cf8), (10,  0x95e8), (12,  0x9cfa), (13,  0x9cf9), (14,  0x8f5e), (16,  0x90ac), 
                 (17,  0x89e4), (18,  0x89fa), (19,  0xfac7), (20,  0x9cfb), (22,  0x88bd), (26,  0x90ca), (27,  0x9cfc), (29,  0xe6c1), 
                 (30,  0x9d40), (31,  0x8c81), (33,  0x9d41), (38,  0x90ed), (42,  0x9d42), (46,  0x9d43), (47,  0x8b59), (48,  0x9d44), 
                 (50,  0x9d45), (51,  0x9d46), (52,  0x91d5), (56,  0x8ccb), (59,  0x96df), (63,  0x965b), (64,  0x8f8a), (65,  0x9d47), 
                 (71,  0x90ee), (72,  0xe7bb), (73,  0x94e0), (75,  0x8ee8), (77,  0x8dcb), (78,  0x9d48), (83,  0x91c5), (85,  0x95a5), 
                 (88,  0x91ef), (91,  0x9d4b), (94,  0x9d49), (96,  0x9d4c), (99,  0x9d4a), (104, 0x9d4d), (110, 0x95af), (113, 0x88b5), 
                 (118, 0x957d), (121, 0x94e1), (124, 0x9d4e), (126, 0x9d51), (127, 0x8fb3) ],
        62 => &[ (0,   0x8b5a), (2,   0x9d4f), (3,   0x9d56), (4,   0x8fb4), (9,   0x9d50), (10,  0x9463), (17,  0x977d), (18,  0x9d52), 
                 (19,  0x9d53), (20,  0x9d57), (21,  0x938a), (22,  0x9d54), (23,  0x8d52), (24,  0x90dc), (27,  0x9d65), (28,  0x94b2), 
                 (30,  0x91f0), (38,  0xfac8), (43,  0x94e2), (44,  0x9dab), (49,  0x95f8), (53,  0x92ef), (57,  0x9695), (59,  0x9d5a), 
                 (60,  0x899f), (61,  0x928a), (66,  0x9d63), (69,  0x9253), (70,  0x9d5d), (71,  0x9d64), (72,  0x9d5f), (73,  0x9d66), 
                 (74,  0x9d62), (76,  0x9d61), (77,  0x948f), (79,  0x9d5b), (80,  0x89fb), (81,  0x9d59), (82,  0x8b91), (83,  0x91f1), 
                 (84,  0x9d55), (87,  0x9d58), (88,  0x8d53), (89,  0x90d9), (91,  0x8fb5), (92,  0x9d60), (93,  0x9471), (96,  0x8b92), 
                 (97,  0x8a67), (108, 0x8a87), (109, 0x9040), (110, 0x9d68), (111, 0x9d6d), (113, 0x9d69), (115, 0x8c9d), (117, 0x9d6e), 
                 (118, 0x8e41), (119, 0x8d89), (126, 0x8f45), (127, 0x9d5c) ],
        63 => &[ (1,   0x8e9d), (2,   0x9d6b), (7,   0x8e77), (8,   0x9d6c), (9,   0x88c2), (12,  0x9d67), (17,  0x92a7), (25,  0x8b93), 
                 (31,  0x8bb2), (39,  0x9d6a), (40,  0x88a5), (43,  0x8dc1), (47,  0x9055), (58,  0x92f0), (61,  0x94d2), (62,  0x9d70), 
                 (63,  0x917d), (73,  0x91a8), (76,  0x8e4a), (77,  0x9d71), (79,  0x9d73), (80,  0x9d6f), (85,  0x95df), (87,  0x92bb), 
                 (92,  0x917b), (103, 0x95f9), (104, 0x8ecc), (105, 0x9d80), (107, 0x9d7e), (110, 0x9098), (114, 0x8c9e), (118, 0x9d78), 
                 (119, 0x8fb7), (122, 0x93e6), (123, 0x9450) ],
        64 => &[ (0,   0x9d76), (3,   0x917c), (8,   0x8ef6), (9,   0x9d7b), (12,  0x8fb6), (14,  0x9d75), (15,  0x9d7a), (18,  0x9472), 
                 (22,  0x9d74), (24,  0x8c40), (27,  0x8a7c), (31,  0x9d7c), (32,  0x97a9), (33,  0x8dcc), (34,  0x9254), (35,  0x9d79), 
                 (37,  0x90da), (39,  0x8d54), (40,  0x9084), (41,  0x8986), (42,  0x915b), (43,  0x9d77), (44,  0x8b64), (50,  0x8c66), 
                 (52,  0x92cd), (53,  0x9d7d), (59,  0x917e), (62,  0x9d81), (64,  0x9d83), (67,  0x91b5), (68,  0x9d89), (70,  0x9d84), 
                 (73,  0x9d86), (79,  0x9560), (80,  0x92f1), (82,  0x9d87), (86,  0x974b), (90,  0x9767), (91,  0x8ab7), (97,  0x88ac), 
                 (99,  0x9d85), (105, 0x9d82), (110, 0x8af6), (116, 0x8987), (117, 0xfac9), (118, 0x9d88), (122, 0x9768) ],
        65 => &[ (6,   0x9d8c), (13,  0x91b9), (15,  0x9d93), (19,  0x9d8d), (22,  0x9d8a), (23,  0x9d91), (28,  0x9d72), (38,  0x9d8e), 
                 (40,  0x9d92), (44,  0x94c0), (45,  0x938b), (52,  0x9d8b), (54,  0x9d8f), (58,  0x8c67), (62,  0x8def), (66,  0x90db), 
                 (78,  0x9d97), (88,  0x9345), (96,  0xfaca), (103, 0x9d94), (105, 0x9680), (111, 0x9d95), (118, 0x9d96), (120, 0x96cc), 
                 (122, 0x90a0) ],
        66 => &[ (3,   0x8c82), (8,   0x9d9d), (18,  0x8e54), (19,  0x9d9a), (21,  0x9d99), (26,  0x9451), (29,  0xfacb), (30,  0x93b3), 
                 (36,  0x9350), (37,  0x9d9b), (41,  0x9d9c), (43,  0x958f), (45,  0x9464), (46,  0x8e42), (48,  0x90ef), (50,  0x966f), 
                 (57,  0x8a68), (59,  0x9da3), (60,  0x9d9e), (65,  0x9769), (66,  0x9da5), (69,  0x9da1), (71,  0x9da2), (77,  0x9180), 
                 (78,  0xfacc), (82,  0x9da0), (84,  0x9d5e), (88,  0x9da4), (90,  0x9d9f), (96,  0x9da9), (97,  0x9daa), (98,  0x9346), 
                 (99,  0x9dac), (102, 0x8e43), (103, 0x9da7), (108, 0x8b5b), (111, 0x9dad), (113, 0x9da6), (114, 0x9db1), (116, 0x9db0), 
                 (118, 0x9daf), (122, 0x9db2), (125, 0x9db4), (126, 0x8fef) ],
        67 => &[ (0,   0x9db3), (5,   0x9db7), (24,  0x9db5), (28,  0x9db6), (29,  0x9d90), (35,  0x9db9), (36,  0x9db8), (42,  0x9d98), 
                 (43,  0x9dba), (44,  0x9dae), (47,  0x8e78), (52,  0x9dbb), (53,  0x9dbc), (54,  0x9dbe), (55,  0x9dbd), (56,  0x9dbf), 
                 (57,  0x89fc), (59,  0x8d55), (62,  0x95fa), (63,  0x90ad), (69,  0x8ccc), (72,  0x9dc1), (77,  0x9dc4), (78,  0xfacd), 
                 (79,  0x9571), (81,  0x8b7e), (85,  0x9dc3), (86,  0x9dc2), (87,  0x9473), (88,  0x9dc5), (89,  0x8bb3), (93,  0x9dc7), 
                 (94,  0x9dc6), (98,  0x8ab8), (99,  0x8e55), (102, 0x93d6), (108, 0x8c68), (112, 0x9094), (114, 0x9dc8), (116, 0x90ae), 
                 (117, 0x9347), (119, 0x957e), (120, 0x9dc9) ],
        68 => &[ (2,   0x9dca), (3,   0x9dcb), (7,   0x95b6), (8,   0x9b7c), (9,   0x90c4), (12,  0x956b), (14,  0x8dd6), (16,  0x94e3), 
                 (17,  0x94c1), (23,  0x936c), (25,  0x97bf), (27,  0x9dcd), (28,  0x8ece), (31,  0x9dce), (33,  0x88b4), (36,  0x8bd2), 
                 (37,  0x90cb), (39,  0x9580), (43,  0x9dcf), (44,  0x8e61), (45,  0x9266), (47,  0x8e7a), (48,  0x9056), (55,  0x9dd0), 
                 (57,  0x95fb), (60,  0x8997), (61,  0x8e7b), (65,  0x9dd3), (67,  0x9dd1), (68,  0x9dd4), (69,  0x97b7), (70,  0x9dd2), 
                 (75,  0x90f9), (76,  0x9dd5), (79,  0x91b0), (82,  0x9dd6), (87,  0x8af8), (89,  0x9dd8), (91,  0x9dd7), (96,  0x9dd9), 
                 (97,  0x9dda), (98,  0x8af9), (101, 0x93fa), (102, 0x9255), (103, 0x8b8c), (104, 0x8e7c), (105, 0x9181), (108, 0x8f7b), 
                 (109, 0x88ae), (113, 0x9ddb), (122, 0x89a0), (123, 0x9ddf) ],
        69 => &[ (0,   0xface), (2,   0x8d56), (3,   0x9dde), (6,   0x8da9), (7,   0x8fb8), (9,   0xfad1), (10,  0x9ddd), (12,  0x8fb9), 
                 (14,  0x96be), (15,  0x8da8), (19,  0x88d5), (20,  0x90cc), (21,  0xfacf), (28,  0x9de4), (30,  0xfad3), (31,  0x90af), 
                 (32,  0x8966), (36,  0xfad4), (37,  0x8f74), (39,  0x9686), (40,  0x8df0), (45,  0x8fba), (46,  0xfad2), (47,  0x90a5), 
                 (49,  0xfa63), (52,  0x9de3), (53,  0x9de1), (54,  0x9de2), (59,  0xfad0), (60,  0x928b), (63,  0x9e45), (65,  0x9de8), 
                 (66,  0x8e9e), (67,  0x8d57), (68,  0x9de6), (73,  0x9de7), (75,  0x9057), (79,  0x9de5), (82,  0x8e4e), (87,  0xfad6), 
                 (89,  0xfad7), (93,  0x9dea), (94,  0x9de9), (95,  0x9dee), (98,  0x9def), (100, 0x9deb), (101, 0xfad5), (102, 0x8a41), 
                 (103, 0x9dec), (104, 0x9ded), (105, 0x94d3), (110, 0x9581), (111, 0x8c69), (112, 0x9df0), (115, 0xfad9), (116, 0x90b0), 
                 (118, 0x8fbb), (122, 0x9271) ],
        70 => &[ (1,   0x8bc5), (3,   0x9df1), (4,   0x9df5), (7,   0x89c9), (8,   0x9df2), (9,   0x9df4), (14,  0x9df3), (17,  0x8f8b), 
                 (22,  0x9267), (23,  0x88c3), (24,  0x9df6), (25,  0xfada), (29,  0x9df7), (32,  0xfadb), (34,  0x92a8), (38,  0x97ef), 
                 (43,  0x8e62), (46,  0x95e9), (50,  0xfadc), (52,  0x965c), (56,  0x9e41), (57,  0x9df9), (60,  0x9dfc), (62,  0x9dfb), 
                 (63,  0xfadd), (65,  0x9df8), (68,  0x9e40), (71,  0x93dc), (73,  0x9dfa), (86,  0x9e42), (89,  0x8f8c), (90,  0x9e43), 
                 (92,  0x976a), (93,  0x9498), (96,  0x9e44), (102, 0x9e46), (105, 0x9e47), (112, 0x9e48), (114, 0x8bc8), (115, 0x8967), 
                 (116, 0x8d58), (117, 0x9e49), (119, 0x9e4a), (120, 0x8f91), (121, 0x9182), (122, 0xfade), (123, 0xfa66), (124, 0x99d6), 
                 (125, 0x915d), (126, 0x915c), (127, 0x91d6) ],
        71 => &[ (0,   0x8dc5), (3,   0x98f0), (8,   0x8c8e), (9,   0x974c), (11,  0x95fc), (13,  0x959e), (14,  0xfadf), (15,  0x9e4b), 
                 (20,  0x8df1), (21,  0x92bd), (22,  0x9e4c), (23,  0x984e), (27,  0x965d), (29,  0x92a9), (30,  0x9e4d), (31,  0x8afa), 
                 (38,  0x9e4e), (39,  0x9e4f), (40,  0x96d8), (42,  0x96a2), (43,  0x9696), (44,  0x967b), (45,  0x8e44), (46,  0x9e51), 
                 (49,  0x8ee9), (52,  0x9670), (54,  0x9e53), (55,  0x9e56), (56,  0x9e55), (58,  0x8af7), (61,  0x8b80), (63,  0x9e52), 
                 (65,  0x9e54), (70,  0x9e57), (73,  0x9099), (78,  0x979b), (79,  0x88c7), (80,  0x8dde), (81,  0x91ba), (83,  0x8edb), 
                 (86,  0x8ff1), (89,  0x9e5a), (92,  0x936d), (94,  0x9e58), (95,  0x91a9), (96,  0x9e59), (97,  0x8ff0), (98,  0x96db), 
                 (99,  0x9e5b), (100, 0x9e5c), (101, 0x9788), (102, 0xfae1), (106, 0x9e61), (109, 0x8d59), (111, 0x9474), (112, 0x9e5e), 
                 (113, 0x938c), (114, 0x9ddc), (115, 0x9de0), (117, 0x8b6e), (119, 0x9466), (124, 0x9e60), (126, 0x8fbc), (127, 0x94c2) ],
        72 => &[ (5,   0x9e66), (7,   0x94f8), (9,   0x9e5d), (11,  0x9e63), (12,  0x9e62), (16,  0x90cd), (21,  0x968d), (23,  0x97d1), 
                 (26,  0x9687), (28,  0x89ca), (29,  0x8e7d), (32,  0x9867), (33,  0x9e65), (34,  0x9095), (38,  0x9e64), (41,  0x9e5f), 
                 (47,  0x8ccd), (51,  0x9e6b), (52,  0x9e69), (54,  0x89cb), (55,  0x9e67), (56,  0x9e6d), (57,  0x9e73), (59,  0xfae2), 
                 (64,  0xfae4), (65,  0x91c6), (68,  0x95bf), (70,  0x9e75), (74,  0x9541), (78,  0x9e74), (79,  0x9490), (80,  0x965e), 
                 (81,  0x8ab9), (83,  0x90f5), (84,  0x8f5f), (88,  0x92d1), (90,  0x974d), (93,  0x9e70), (94,  0x9e6f), (98,  0x9e71), 
                 (100, 0x9e6e), (103, 0x9e76), (105, 0x9e6c), (108, 0x9e6a), (110, 0x9e72), (111, 0x9e68), (113, 0x928c), (115, 0x96f6), 
                 (116, 0x8ec4), (117, 0x8df2), (123, 0x8db8), (126, 0x968f), (127, 0x8a60) ],
        73 => &[ (1,   0xfae5), (2,   0x92cc), (3,   0x93c8), (4,   0x8968), (19,  0x90f0), (22,  0x90b2), (23,  0x8c49), (30,  0x9e78), 
                 (33,  0x8d5a), (34,  0x8a9c), (41,  0x9e7a), (42,  0x8a94), (43,  0x9e81), (50,  0x9e7d), (52,  0x90f1), (56,  0x8a6a), 
                 (57,  0x8daa), (60,  0x8a69), (61,  0x8dcd), (64,  0x9e7b), (65,  0x8c85), (66,  0x8c6a), (67,  0x938d), (68,  0xfae6), 
                 (70,  0x9e79), (72,  0x88c4), (77,  0x9e7c), (78,  0x9e7e), (80,  0x8bcb), (81,  0x8c4b), (82,  0xfae3), (83,  0x8aba), 
                 (84,  0x8b6a), (89,  0x9e82), (92,  0x8df7), (93,  0x9691), (95,  0x8e56), (99,  0x9e83), (103, 0x954f), (116, 0x9e8f), 
                 (118, 0x89b1), (119, 0x9e84), (126, 0x9e95), (127, 0x9e85) ],
        74 => &[ (1,   0x97c0), (3,   0x9e8c), (5,   0x947e), (13,  0x9e94), (15,  0x9e87), (19,  0x88b2), (20,  0x9e89), (23,  0x8d5b), 
                 (27,  0x9e8b), (29,  0x9e8a), (31,  0x9e86), (32,  0x9e91), (34,  0x8fbd), (38,  0x9aeb), (39,  0x8ce6), (40,  0x979c), 
                 (45,  0x9e88), (47,  0x92f2), (48,  0x8a42), (49,  0x8dab), (51,  0x9e80), (53,  0x9e90), (54,  0x8a81), (57,  0x9e8e), 
                 (58,  0x9e92), (60,  0x938e), (68,  0x8afc), (70,  0x9eb0), (72,  0xfa64), (73,  0x96c7), (74,  0x9e97), (75,  0x8afb), 
                 (77,  0x9e9e), (79,  0xfae7), (82,  0x965f), (84,  0x9e9f), (85,  0x9ea1), (87,  0x9ea5), (88,  0x9e99), (90,  0x9249), 
                 (95,  0x938f), (96,  0x9ea9), (97,  0x9e9c), (99,  0x9ea6), (103, 0x9ea0), (110, 0x9058), (111, 0x9eaa), (114, 0x90b1), 
                 (121, 0x9ea8), (122, 0x8abb) ],
        75 => &[ (0,   0x986f), (1,   0x9e96), (4,   0x9ea4), (5,   0x88d6), (8,   0x9e98), (11,  0x96b8), (12,  0x9e9d), (13,  0x9041), 
                 (14,  0x92c5), (15,  0x9e93), (18,  0x9ea3), (25,  0x909a), (26,  0x9ead), (27,  0x8a91), (28,  0x8c9f), (33,  0x9eaf), 
                 (34,  0x9e9a), (35,  0x9eae), (37,  0x9ea7), (38,  0x9e9b), (40,  0x9eab), (42,  0x9eac), (48,  0x9ebd), (52,  0x93cc), 
                 (54,  0x9ea2), (57,  0x9eb9), (61,  0x9ebb), (63,  0x92d6), (74,  0x976b), (83,  0x9596), (84,  0x9eb6), (85,  0x91c8), 
                 (89,  0x9ebc), (90,  0x915e), (92,  0x9eb3), (93,  0x9ec0), (94,  0x9ebf), (96,  0x93ed), (97,  0x9ebe), (98,  0x93e8), 
                 (104, 0xfae9), (106, 0x9ec2), (107, 0x9eb5), (109, 0x8bc6), (110, 0x9eb8), (111, 0x8f7c), (115, 0x9480), (116, 0x9eba), 
                 (117, 0x8bc9), (119, 0x9eb2), (120, 0x9eb4), (121, 0x9eb1), (124, 0x984f), (125, 0x8a79), (126, 0x9eb7) ],
        76 => &[ (1,   0x9ec1), (2,   0x8a54), (10,  0x8de5), (14,  0x897c), (17,  0x9ed2), (20,  0x9850), (21,  0x9ed5), (24,  0xfaeb), 
                 (27,  0x9059), (28,  0x9ed4), (32,  0x9ed3), (39,  0x9ed0), (46,  0x9ec4), (49,  0x9ee1), (50,  0x9ec3), (52,  0x9ed6), 
                 (59,  0x9ece), (62,  0x9ec9), (63,  0x9ec6), (65,  0x9ec7), (67,  0x9ecf), (71,  0xeaa0), (74,  0x9ecc), (75,  0x8d5c), 
                 (76,  0x92c6), (77,  0x9184), (78,  0x9eca), (80,  0x9ec5), (83,  0x9ec8), (88,  0x976c), (89,  0x968a), (93,  0x9ecd), 
                 (94,  0x9ed7), (98,  0xfaec), (103, 0x9edf), (104, 0x9ed8), (107, 0x9ee5), (109, 0x9ee3), (114, 0x9ede), (121, 0x9edd), 
                 (123, 0x92ce), (125, 0x9185), (127, 0x9edb) ],
        77 => &[ (2,   0x9ed9), (5,   0x9ee0), (10,  0x9ee6), (11,  0x94f3), (12,  0x9eec), (18,  0x9ee7), (19,  0x9eea), (20,  0x9ee4), 
                 (23,  0x9294), (25,  0x9557), (27,  0x9eda), (30,  0x9ee2), (31,  0x8fbe), (33,  0x96cd), (34,  0x9ef6), (35,  0x9ee9), 
                 (41,  0x8ca0), (42,  0x89a1), (43,  0x8a7e), (46,  0x9ed1), (48,  0xfaed), (53,  0x8fbf), (54,  0x9eee), (56,  0x9ef5), 
                 (57,  0x8ef7), (58,  0x8a92), (61,  0x924d), (68,  0x9eeb), (70,  0xfaef), (71,  0x9ef0), (72,  0x9ef4), (75,  0x8bb4), 
                 (88,  0x8b6b), (89,  0x9ef2), (95,  0x8b40), (97,  0x93c9), (98,  0x9ef1), (102, 0x9ef3), (107, 0xfaee), (114, 0x9eed), 
                 (115, 0xfaf0), (120, 0x9eef), (126, 0xfaf1), (127, 0x8a80) ],
        78 => &[ (0,   0x9268), (4,   0x9efa), (13,  0x9ef8), (14,  0x8ce7), (16,  0x9ef7), (23,  0x9f40), (28,  0x9e77), (32,  0x9ef9), 
                 (34,  0x9efb), (35,  0x9efc), (42,  0x9f4b), (44,  0x9f47), (46,  0x9e8d), (51,  0x9f46), (56,  0x9f45), (59,  0x9f42), 
                 (65,  0x9ee8), (66,  0x9f44), (67,  0x9f43), (81,  0x9f49), (83,  0x9845), (90,  0x9f4c), (91,  0x8bf9), (94,  0x9f48), 
                 (95,  0x9f4a), (98,  0xfaf2), (100, 0xfaf3), (104, 0x94a5), (106, 0x9f4d), (122, 0x9f51), (123, 0x9f4e) ],
        79 => &[ (4,   0x9793), (5,   0x9f4f), (10,  0x9edc), (18,  0x9f52), (22,  0x9f53), (29,  0x8954), (31,  0x9f55), (32,  0x8c87), 
                 (33,  0x8e9f), (35,  0x8bd3), (39,  0x89a2), (50,  0x977e), (55,  0x9f57), (56,  0x9f56), (57,  0x9f59), (58,  0x8b5c), 
                 (61,  0x8bd4), (62,  0x8abc), (67,  0x9f5c), (71,  0x9f5b), (73,  0x9f5d), (76,  0x89cc), (78,  0x9256), (80,  0x9f5e), 
                 (83,  0x8abd), (84,  0x9f60), (89,  0x9f5f), (91,  0x9f61), (95,  0x9f62), (97,  0x9f63), (98,  0x8e7e), (99,  0x90b3), 
                 (100, 0x8d9f), (102, 0x9590), (105, 0x95e0), (106, 0x9863), (111, 0x8e95), (115, 0x8dce), (116, 0x97f0), (120, 0x9f64), 
                 (121, 0x9f65), (123, 0x8e80), (127, 0x9f66) ],
        80 => &[ (0,   0x9f67), (3,   0x9f69), (4,   0x9f68), (6,   0x9677), (9,   0x8f7d), (10,  0x8eea), (11,  0x8e63), (13,  0x9f6a), 
                 (21,  0x9f6c), (22,  0x9042), (24,  0x9f6b), (30,  0x9f6d), (36,  0x9f6e), (42,  0x9f6f), (43,  0x9f70), (47,  0x9f71), 
                 (49,  0x9f73), (50,  0x9f72), (51,  0x9f74), (52,  0x89a3), (53,  0x9269), (55,  0x9f75), (58,  0x8e45), (59,  0x8a6b), 
                 (60,  0x9f76), (63,  0x9361), (64,  0x9aca), (69,  0x8b42), (70,  0x9f77), (75,  0x9f78), (77,  0x95ea), (78,  0x9688), 
                 (82,  0x93c5), (83,  0x9f79), (84,  0x94e4), (86,  0xfaf4), (88,  0x94f9), (91,  0x96d1), (95,  0x9f7a), (107, 0x9f7c), 
                 (108, 0x9f7b), (111, 0x9f7e), (115, 0x9f7d) ],
        81 => &[ (8,   0x9f81), (15,  0x8e81), (17,  0x96af), (19,  0x9f82), (20,  0x9f83), (23,  0x8b43), (27,  0x9f84), (35,  0x9f86), 
                 (36,  0x9f85), (52,  0x9085), (55,  0x9558), (56,  0x8969), (62,  0x94c3), (63,  0xfaf5), (64,  0x92f3), (65,  0x8f60), 
                 (66,  0x8b81), (78,  0x94c4), (80,  0x8eac), (85,  0x9f88), (87,  0x8abe), (90,  0x8998), (92,  0xfaf6), (93,  0x93f0), 
                 (94,  0x9f87), (95,  0x8d5d), (96,  0x9272), (98,  0x9f89), (104, 0x9f91), (106, 0x9f8a), (111, 0xfaf8), (112, 0x91bf), 
                 (114, 0x8b82), (115, 0x9f92), (122, 0x8c88), (125, 0x8b44), (126, 0x9f90) ],
        82 => &[ (1,   0x9f8e), (2,   0x9f8b), (3,   0x9780), (6,   0xfaf7), (8,   0x92be), (12,  0x93d7), (13,  0x9f8c), (16,  0x9f94), 
                 (18,  0x9f93), (19,  0x8c42), (22,  0x89ab), (25,  0x8db9), (26,  0x9f8d), (27,  0x9f8f), (33,  0x9676), (34,  0x91f2), 
                 (43,  0x9697), (46,  0x9f9c), (49,  0x9f9d), (51,  0x89cd), (56,  0x95a6), (57,  0x96fb), (58,  0x9f9f), (59,  0x8ea1), 
                 (60,  0x8fc0), (61,  0x9f98), (62,  0x9f9e), (63,  0x8988), (65,  0x8bb5), (68,  0x9f95), (69,  0x9f9a), (73,  0x90f2), 
                 (74,  0x9491), (76,  0x94e5), (83,  0x9f97), (85,  0x9640), (87,  0x9f99), (89,  0x9fa2), (90,  0xfaf9), (91,  0x9fa0), 
                 (93,  0x9f9b), (97,  0x9641), (98,  0x9467), (99,  0x8b83), (101, 0x9344), (104, 0x928d), (106, 0x9fa3), (111, 0x9fa1), 
                 (112, 0x91d7), (113, 0x9f96), (115, 0x896a) ],
        83 => &[ (4,   0xfafa), (11,  0x976d), (12,  0x9fae), (18,  0x9fad), (23,  0x90f4), (25,  0x9faa), (27,  0x978c), (30,  0x93b4), 
                 (31,  0x9fa4), (37,  0x92c3), (41,  0x896b), (42,  0x8d5e), (43,  0x9fa7), (50,  0x8f46), (51,  0x9fac), (53,  0x9fab), 
                 (54,  0x9fa6), (56,  0x9fa9), (59,  0x8a88), (61,  0x9fa8), (62,  0x9468), (65,  0x97ac), (68,  0x8ff2), (69,  0x90f3), 
                 (89,  0x9fb4), (90,  0x9fb2), (92,  0x956c), (99,  0x9faf), (100, 0x9fb1), (102, 0x8959), (105, 0x8d5f), (106, 0x9851), 
                 (108, 0x8a5c), (110, 0x9582), (111, 0xfafc), (116, 0x9781), (119, 0x8a43), (120, 0x905a), (121, 0x9fb3) ],
        84 => &[ (5,   0x9fb8), (7,   0xfafb), (8,   0x8fc1), (12,  0x974f), (14,  0x9fb5), (19,  0x9fb0), (21,  0x9fb6), (22,  0xfb40), 
                 (25,  0x97dc), (27,  0x9393), (28,  0x93c0), (44,  0xfb41), (47,  0x8a55), (50,  0x8974), (53,  0x9fbc), (56,  0x9fbf), 
                 (60,  0x97c1), (64,  0x9784), (69,  0x9fc6), (70,  0x9fc0), (71,  0x9fbd), (75,  0x97d2), (76,  0x9fc3), (79,  0xfb42), 
                 (81,  0x8f69), (82,  0x9fc5), (85,  0x9fca), (88,  0x9391), (89,  0x9fc8), (94,  0x9fc2), (97,  0x9257), (100, 0x9fc9), 
                 (102, 0x9fbe), (104, 0x9fc4), (106, 0x9fcb), (107, 0x88fa), (108, 0x9fc1), (110, 0x9fcc), (113, 0x905b), (114, 0xfb44), 
                 (115, 0x8f7e), (117, 0x95a3), (119, 0x8dac), (120, 0xfb43), (121, 0x9fb9), (122, 0x9fc7), (123, 0x9359), (124, 0xfb45) ],
        85 => &[ (5,   0x90b4), (7,   0x8a89), (8,   0x8dcf), (9,   0x8fc2), (10,  0x9fbb), (11,  0x8f61), (19,  0x8c6b), (21,  0x9fba), 
                 (25,  0x9fd0), (26,  0x8f8d), (27,  0x8cb8), (29,  0x9fdf), (31,  0x9fd9), (32,  0x8b94), (33,  0x936e), (35,  0x9fd4), 
                 (36,  0x9fdd), (37,  0x88ad), (38,  0x8951), (39,  0xfb48), (41,  0x89b7), (43,  0x9fd6), (44,  0x91aa), (45,  0x9fcd), 
                 (46,  0x9fcf), (47,  0x8d60), (56,  0x9fe0), (57,  0xfb46), (58,  0x9fdb), (60,  0xfb49), (62,  0x9fd3), (67,  0x9fda), 
                 (74,  0x96a9), (77,  0x9fd8), (78,  0x9fdc), (86,  0x8cce), (88,  0x8fc3), (91,  0x9258), (92,  0xfb47), (95,  0x9fd2), 
                 (103, 0x974e), (107, 0x9fd5), (110, 0x9fce), (111, 0x9392), (114, 0x9fd1), (118, 0x9fd7), (126, 0x9870), (127, 0x8ebc) ],
        86 => &[ (0,   0x969e), (2,   0x9fe1), (12,  0x94ac), (15,  0x9fed), (16,  0x8cb9), (22,  0x8f80), (24,  0x9fe3), (28,  0x97ad), 
                 (29,  0x8d61), (31,  0x9ff0), (34,  0x88ec), (37,  0x9fee), (42,  0x9fe2), (47,  0x9fe8), (50,  0x9fea), (54,  0x976e), 
                 (55,  0x9fe5), (58,  0x934d), (61,  0x9fe7), (63,  0xfb4a), (66,  0x9fef), (68,  0x9fe9), (69,  0x96c5), (73,  0x9fe4), 
                 (75,  0x8ea0), (76,  0x9ffc), (81,  0x8a8a), (83,  0x9fe6), (84,  0x9feb), (85,  0x9fec), (93,  0x91ea), (94,  0x91d8), 
                 (108, 0x9ff4), (111, 0x9ffa), (114, 0x9ff8), (116, 0x9348), (119, 0xe042), (120, 0x9ff5), (126, 0x9ff6), (127, 0x9fde) ],
        87 => &[ (1,   0x8b99), (2,   0x9559), (6,   0x8ebd), (9,   0x8d97), (15,  0x9852), (17,  0x9ff2), (19,  0xe041), (20,  0x8989), 
                 (21,  0x9186), (32,  0x9499), (34,  0x8abf), (35,  0x97f8), (43,  0x969f), (44,  0x92d0), (49,  0x9ff9), (50,  0x9ffb), 
                 (56,  0x9151), (62,  0xe040), (63,  0x9ff7), (65,  0x9ff1), (69,  0x8ac1), (84,  0x8c89), (88,  0xe04e), (91,  0xe049), 
                 (92,  0x90f6), (95,  0x8a83), (100, 0x8f81), (102, 0xe052), (109, 0xe04b), (110, 0x92aa), (111, 0xe048), (112, 0x92d7), 
                 (116, 0xe06b), (120, 0xe045), (122, 0xe044), (124, 0xe04d) ],
        88 => &[ (0,   0xe047), (1,   0xe046), (2,   0xe04c), (4,   0x909f), (6,   0xe043), (8,   0xfb4b), (14,  0xe04f), (17,  0xe050), 
                 (23,  0x8ac0), (33,  0xe055), (35,  0xe054), (36,  0xe056), (42,  0xe059), (49,  0x9362), (51,  0xe053), (53,  0xfb4c), 
                 (57,  0xe057), (64,  0x8c83), (65,  0x91f7), (66,  0xe051), (67,  0x945a), (70,  0xe058), (84,  0xe05d), (85,  0xe05b), 
                 (88,  0xe05e), (91,  0xe061), (95,  0xe05a), (96,  0x8d8a), (97,  0x9447), (100, 0x9fb7), (107, 0x9794), (108, 0xe05c), 
                 (110, 0xe060), (111, 0x91f3), (113, 0xe05f), (115, 0xe04a), (117, 0xfb4d), (118, 0xe889), (122, 0xe064), (126, 0xe068) ],
        89 => &[ (1,   0xe066), (5,   0xfb4e), (7,   0xfb4f), (9,   0xe062), (11,  0xe063), (15,  0xe067), (17,  0xe065), (21,  0x956d), 
                 (24,  0xe06d), (26,  0xe06a), (27,  0xe069), (29,  0xe06c), (30,  0x93d2), (31,  0xe06e), (38,  0x9295), (39,  0x91eb), 
                 (40,  0xfb50), (44,  0x90a3), (48,  0xe06f), (50,  0xe071), (62,  0xe070), (76,  0x9ff3), (81,  0xe072), (88,  0x93e5), 
                 (99,  0xe073), (107, 0x89ce), (111, 0x9394), (112, 0x8a44), (120, 0x8b84), (124, 0x8edc), (125, 0x8dd0) ],
        90 => &[ (5,   0xfb51), (9,   0x9846), (10,  0x9086), (14,  0x898a), (18,  0xe075), (25,  0xe074), (43,  0xfb52), (44,  0xe078), 
                 (45,  0x9259), (46,  0xe07b), (47,  0xe076), (51,  0xe07a), (56,  0xe079), (57,  0x935f), (58,  0x88d7), (59,  0xfa62), 
                 (72,  0x97f3), (75,  0xe07d), (79,  0x8947), (89,  0xe080), (93,  0xe07e), (95,  0xe07c), (113, 0xe077), (121, 0x9642), 
                 (125, 0xe082) ],
        91 => &[ (4,   0xfb54), (9,   0xe081), (15,  0xfb53), (20,  0x898b), (25,  0xe084), (26,  0x95b0), (28,  0xe083), (33,  0x96b3), 
                 (38,  0x8fc5), (54,  0x9152), (60,  0x8fc4), (70,  0xfb56), (71,  0xfb57), (73,  0x97f9), (76,  0xe08a), (78,  0x90f7), 
                 (85,  0xe086), (86,  0xe08b), (89,  0x898c), (92,  0xfb55), (98,  0xe089), (100, 0x9481), (101, 0xe085), (102, 0xe088), 
                 (103, 0x8fc6), (105, 0x94cf), (108, 0xe08c), (110, 0x8ecf), (125, 0x90f8) ],
        92 => &[ (4,   0xe08f), (8,   0xe087), (10,  0x8c46), (15,  0xe08d), (20,  0x976f), (21,  0xe090), (25,  0xeaa4), (31,  0x8f6e), 
                 (40,  0xe091), (44,  0xe092), (49,  0x944d), (57,  0xe094), (62,  0xe095), (65,  0xfb59), (67,  0x9452), (72,  0x9395), 
                 (73,  0xe097), (78,  0xe099), (80,  0x97d3), (82,  0xe096), (84,  0xe098), (85,  0x898d), (87,  0xe093), (95,  0x9a7a), 
                 (96,  0xe09a), (101, 0x9187), (102, 0x8e57), (103, 0xe09c), (108, 0xe09b), (109, 0x9043), (110, 0x99d7), (117, 0xe09d), 
                 (121, 0xe09f), (123, 0xe08e), (124, 0xe09e), (126, 0xfb5a), (127, 0xe0a0) ],
        93 => &[ (6,   0x949a), (13,  0xe0a1), (16,  0xe0a2), (27,  0xe0a3), (40,  0xe0a4), (42,  0x92dc), (44,  0xe0a6), (45,  0xe0a5), 
                 (48,  0xe0a7), (50,  0xe0a8), (53,  0x8edd), (54,  0x9583), (58,  0x96ea), (59,  0xe0a9), (60,  0xe0aa), (61,  0x9175), 
                 (62,  0x8ea2), (63,  0xe0ab), (64,  0xe0ac), (70,  0xe0ad), (71,  0x95d0), (72,  0x94c5), (75,  0xe0ae), (76,  0x9476), 
                 (82,  0x92ab), (88,  0xe0af), (89,  0x89e5), (91,  0x8b8d), (93,  0x96c4), (95,  0x96b4), (97,  0x89b2), (98,  0x9853), 
                 (103, 0x9671), (105, 0x95a8), (114, 0x90b5), (116, 0xe0b0), (121, 0x93c1), (125, 0x8ca1), (126, 0xe0b1) ],
        94 => &[ (0,   0x8dd2), (1,   0xe0b3), (2,   0xe0b2), (7,   0xe0b4), (18,  0xe0b5), (22,  0xe0b6), (32,  0x8b5d), (34,  0xe0b7), 
                 (39,  0xe0b8), (44,  0x8ca2), (47,  0x94c6), (49,  0xfb5b), (50,  0xe0ba), (54,  0x8ff3), (57,  0xe0b9), (62,  0xfb5c), 
                 (66,  0x8bb6), (67,  0xe0bb), (68,  0xe0bd), (70,  0xe0bc), (78,  0xe0be), (80,  0x8ccf), (82,  0xe0bf), (87,  0x8be7), 
                 (89,  0x915f), (91,  0x8d9d), (96,  0xe0c1), (97,  0xe0c2), (98,  0xe0c0), (105, 0x8eeb), (108, 0x93c6), (109, 0x8bb7), 
                 (119, 0xe0c4), (120, 0x924b), (121, 0xe0c3), (124, 0x9854), (125, 0x9482) ],
        95 => &[ (10,  0xe0c7), (22,  0xe0c9), (23,  0xe0c6), (27,  0x96d2), (28,  0xe0c8), (29,  0xe0ca), (31,  0x97c2), (36,  0xfb5d), 
                 (37,  0xe0ce), (41,  0xe0cd), (42,  0x9296), (43,  0x944c), (46,  0x8ca3), (47,  0xe0cc), (52,  0xe0cb), (54,  0x9750), 
                 (55,  0x9751), (62,  0xe0cf), (63,  0x898e), (68,  0x8d96), (69,  0x8e82), (78,  0xe0d0), (79,  0xe0d1), (87,  0xe0d3), 
                 (99,  0x8f62), (104, 0xe0d5), (106, 0xe0d4), (112, 0xe0d6), (114, 0x8a6c), (117, 0xe0d8), (119, 0xfb5f), (120, 0xe0d7), 
                 (122, 0xe0da), (123, 0xe0d9) ],
        96 => &[ (4,   0x8cba), (7,   0x97a6), (9,   0x8bca), (11,  0x89a4), (22,  0x8be8), (41,  0x8adf), (50,  0x97e6), (51,  0xe0dc), 
                 (59,  0xe0de), (61,  0xfb60), (64,  0xe0df), (66,  0x89cf), (72,  0xe0db), (73,  0xfb61), (74,  0x8e58), (77,  0x92bf), 
                 (78,  0xe0dd), (82,  0xfb64), (86,  0xfb62), (94,  0xe0e2), (96,  0x8eec), (99,  0xfb63), (101, 0xe0e0), (106, 0x8c5d), 
                 (109, 0x94c7), (110, 0xe0e1), (113, 0xe0fc), (117, 0xfb66), (120, 0xe0e7), (126, 0x8cbb) ],
        97 => &[ (3,   0x8b85), (5,   0xe0e4), (6,   0x979d), (7,   0xfb65), (9,   0x97ae), (34,  0x91f4), (37,  0xe0e6), (38,  0xfb67), 
                 (41,  0xfb69), (42,  0xfb68), (46,  0xfb6a), (50,  0xe0e8), (51,  0x97d4), (52,  0x8bd5), (53,  0x94fa), (54,  0x9469), 
                 (58,  0xe0e9), (63,  0xe0eb), (65,  0xe0ee), (85,  0xe0ea), (89,  0xe0ed), (90,  0x8ce8), (91,  0x896c), (92,  0xe0ef), 
                 (94,  0x9090), (95,  0xe0ec), (96,  0x97da), (98,  0xfb6b), (99,  0xe0f2), (100, 0xeaa2), (105, 0xe0f0), (106, 0xe0f3), 
                 (111, 0xe0e5), (112, 0xe0f1), (115, 0x8dba), (118, 0xe0f4), (126, 0xe0f5) ],
        98 => &[ (3,   0x979e), (9,   0xfb6c), (11,  0xe0f6), (30,  0xe0f7), (31,  0xfb6d), (34,  0xe0e3), (39,  0xe0f8), (48,  0x8ac2), 
                 (61,  0x8ea3), (74,  0xe0f9), (79,  0xe0fa), (84,  0xe0fb), (92,  0x895a), (96,  0xe140), (98,  0x955a), (99,  0xe141), 
                 (102, 0x8aa2), (103, 0xe142), (105, 0xe143), (110, 0xe144), (112, 0xe146), (113, 0xe147), (114, 0xe145), (118, 0x9572), 
                 (119, 0xe149), (120, 0xe148) ],
        99 => &[ (1,   0xfb6e), (3,   0xe14b), (4,   0xe14a), (5,   0xe14c), (12,  0xe14d), (13,  0xe14f), (14,  0xe14e), (17,  0x8d99), 
                 (19,  0xe151), (21,  0xe150), (24,  0x8ac3), (26,  0x9072), (28,  0x935b), (30,  0xe152), (31,  0x90b6), (35,  0x8e59), 
                 (37,  0x8999), (38,  0xe153), (40,  0x9770), (43,  0x95e1), (44,  0xe154), (47,  0xfaa8), (48,  0x9363), (49,  0x9752), 
                 (50,  0x8d62), (51,  0x905c), (55,  0x926a), (56,  0x99b2), (58,  0x92ac), (59,  0x89e6), (60,  0xe155), (68,  0xe156), 
                 (70,  0xe15b), (73,  0xe159), (74,  0xe158), (75,  0x9dc0), (76,  0x8a45), (77,  0xe157), (79,  0x88d8), (81,  0x94a8), 
                 (84,  0x94c8), (89,  0x97af), (90,  0xe15c), (91,  0xe15a), (92,  0x927b), (93,  0x90a4), (96,  0x94a9), (98,  0x954c), 
                 (100, 0xe15e), (101, 0x97aa), (102, 0x8c6c), (103, 0xe15f), (105, 0xe15d), (106, 0x94d4), (107, 0xe160), (109, 0xe161), 
                 (111, 0xfb6f), (112, 0x88d9), (115, 0x8ff4), (116, 0xe166), (118, 0xe163), (119, 0x93eb), (120, 0xe162), (127, 0x8b45) ],
        100 => &[ (2,   0xe169), (6,   0xe164), (7,   0xe165), (9,   0xe168), (10,  0xe167), (11,  0x9544), (14,  0x9161), (15,  0x9160), 
                  (17,  0x8b5e), (20,  0xe16a), (26,  0xe16b), (29,  0xe16c), (35,  0xe16e), (37,  0xe16d), (43,  0x8975), (49,  0xe176), 
                  (50,  0x94e6), (51,  0xe170), (53,  0xe172), (56,  0xe174), (57,  0x905d), (60,  0xe175), (61,  0xe173), (62,  0x8ebe), 
                  (66,  0xe16f), (67,  0xe171), (69,  0x9561), (71,  0x8fc7), (74,  0xe178), (77,  0xe177), (82,  0xe179), (84,  0x8ea4), 
                  (85,  0x8dad), (88,  0x9397), (89,  0xe17a), (91,  0x92c9), (94,  0xe17c), (98,  0x979f), (99,  0xe17b), (105, 0x9189), 
                  (112, 0xe182), (114, 0xe184), (115, 0xe185), (116, 0x9273), (122, 0xe183), (124, 0xe180), (126, 0xe17d), (127, 0xe17e) ],
        101 => &[ (1,   0xe181), (9,   0xe188), (11,  0xe186), (13,  0xe187), (31,  0xe189), (32,  0xe18b), (33,  0xe18c), (34,  0xe18d), 
                  (36,  0xe18e), (39,  0xe18a), (48,  0xe190), (52,  0xe18f), (59,  0xe191), (66,  0x97c3), (70,  0xe194), (71,  0xe192), 
                  (72,  0xe193), (76,  0x8ae0), (82,  0x96fc), (86,  0x95c8), (88,  0xe196), (92,  0xe195), (97,  0xe197), (98,  0xe198), 
                  (103, 0xe19c), (104, 0xe199), (105, 0xe19a), (106, 0xe19b), (108, 0xe19d), (112, 0xe19e), (114, 0xe19f), (118, 0xe1a0), 
                  (120, 0xe1a1), (122, 0x94ad), (123, 0x936f), (124, 0xe1a2), (125, 0x9492), (126, 0x9553) ],
        102 => &[ (0,   0xe1a3), (2,   0xfb70), (3,   0xe1a4), (4,   0x9349), (6,   0x8a46), (7,   0x8d63), (8,   0xe1a5), (11,  0xe1a6), 
                  (14,  0xe1a7), (16,  0x8e48), (19,  0xe1a9), (22,  0xe1a8), (25,  0xe1aa), (26,  0xe1ab), (27,  0xfb73), (28,  0xfb71), 
                  (30,  0xfb72), (38,  0xfb74), (46,  0x94e7), (48,  0xe1ac), (52,  0xe1ad), (55,  0xea89), (56,  0xe1ae), (57,  0xe1af), 
                  (58,  0xe1b0), (63,  0x8e4d), (66,  0xe1b1), (67,  0x9475), (70,  0x967e), (72,  0x896d), (74,  0x8976), (77,  0xe1b2), 
                  (82,  0xe1b4), (86,  0xe1b3), (87,  0x9390), (91,  0x90b7), (92,  0x9f58), (94,  0xe1b5), (95,  0x96bf), (97,  0xe1b6), 
                  (99,  0x8ac4), (100, 0x94d5), (101, 0xe1b7), (103, 0xe1b8), (106, 0xe1b9), (110, 0x96da), (114, 0x96d3), (116, 0x92bc), 
                  (120, 0x918a), (123, 0xe1bb), (126, 0x8f82) ],
        103 => &[ (1,   0x8fc8), (4,   0xe1be), (7,   0xe1bd), (8,   0xe1bc), (9,   0x94fb), (11,  0x8ac5), (12,  0x8ca7), (27,  0xe1c4), 
                  (30,  0xe1c1), (31,  0x905e), (32,  0x96b0), (36,  0xe1c0), (37,  0xe1c2), (38,  0xe1c3), (41,  0xe1bf), (55,  0xe1c5), 
                  (56,  0xe1c6), (58,  0x92ad), (60,  0x8ae1), (64,  0x9285), (70,  0xfb76), (71,  0xe1c7), (90,  0xe1c8), (91,  0xe1cb), 
                  (97,  0x9087), (99,  0x93c2), (101, 0xe1cc), (102, 0x9672), (104, 0xe1c9), (107, 0xe1ca), (121, 0xe1cf), (126, 0xe1ce), 
                  (127, 0xe1cd) ],
        104 => &[ (11,  0xe1d1), (14,  0xe1d0), (17,  0xe1d2), (30,  0xe1d4), (32,  0xe1d3), (37,  0x95cb), (44,  0x8f75), (45,  0x97c4), 
                  (48,  0xe1d5), (51,  0x93b5), (54,  0xe1d6), (57,  0xe1d7), (59,  0xe1db), (60,  0xe1d9), (61,  0xe1da), (63,  0xe1d8), 
                  (71,  0xe1dc), (77,  0xe1dd), (87,  0xe1de), (90,  0xe1df), (91,  0x96b5), (92,  0xe1e0), (98,  0x96ee), (99,  0xe1e1), 
                  (101, 0x926d), (103, 0x948a), (105, 0x8be9), (109, 0x925a), (110, 0xe1e2), (111, 0x8bb8), (115, 0x90ce), (124, 0xe1e3) ],
        105 => &[ (2,   0x8dbb), (12,  0xe1e4), (18,  0xe1e5), (20,  0x8ca4), (21,  0x8dd3), (32,  0xe1e7), (33,  0xfb78), (37,  0x9375), 
                  (38,  0x8dd4), (39,  0x8b6d), (50,  0x9643), (52,  0x946a), (58,  0x9376), (63,  0x8d7b), (69,  0xe1e9), (78,  0xfb79), 
                  (93,  0x8fc9), (100, 0xfb7a), (107, 0x97b0), (108, 0x8d64), (111, 0x8ca5), (114, 0x94a1), (116, 0xe1eb), (122, 0xfb7b), 
                  (124, 0xe1ed) ],
        106 => &[ (1,   0x8ce9), (6,   0xe1ec), (7,   0x92f4), (12,  0xe1ef), (13,  0x8a56), (14,  0xe1ea), (17,  0x94e8), (19,  0x894f), 
                  (21,  0x8dea), (23,  0x9871), (26,  0xe1ee), (35,  0xe1f0), (39,  0x95c9), (41,  0x90d7), (42,  0xe1f2), (47,  0xe1f3), 
                  (53,  0xe1f1), (58,  0x8a6d), (60,  0xe1f9), (62,  0xe1f8), (65,  0x8ea5), (69,  0xe1fa), (70,  0xe1f5), (74,  0xe1fb), 
                  (75,  0xe1f6), (80,  0x94d6), (81,  0xe1f4), (84,  0xe1f7), (90,  0xe241), (103, 0xe240), (104, 0x9681), (108, 0xe1fc), 
                  (111, 0x88e9), (116, 0xe243), (125, 0xe242) ],
        107 => &[ (1,   0x8fca), (7,   0xe244), (14,  0x9162), (17,  0xe246), (18,  0xe245), (25,  0xe247), (38,  0xe1e6), (42,  0xe1e8), 
                  (43,  0xe249), (44,  0xe248), (48,  0xfb7c), (58,  0x8ea6), (60,  0x97e7), (62,  0x8ed0), (64,  0xe24a), (65,  0x8c56), 
                  (71,  0x8b5f), (72,  0x8b46), (73,  0x8e83), (80,  0x9753), (83,  0xe250), (85,  0xe24f), (86,  0x9163), (87,  0xe24c), 
                  (90,  0xe24e), (93,  0x8f6a), (94,  0x905f), (95,  0xe24d), (96,  0xe24b), (98,  0x9449), (101, 0x8fcb), (104, 0x955b), 
                  (109, 0x8dd5), (119, 0x9398), (122, 0xe251), (127, 0xe252) ],
        108 => &[ (0,   0xe268), (1,   0x8bd6), (4,   0x985c), (5,   0x9154), (10,  0xe253), (13,  0x89d0), (14,  0x92f5), (15,  0x959f), 
                  (20,  0xfb81), (27,  0xfb83), (29,  0xe254), (38,  0x8b9a), (39,  0xe255), (42,  0xe257), (46,  0xe258), (48,  0x9448), 
                  (51,  0xe259), (57,  0xe25a), (58,  0xe25b), (61,  0x8bd7), (62,  0x89d1), (63,  0x93c3), (64,  0x8f47), (65,  0x8e84), 
                  (73,  0xe25c), (75,  0x8f48), (81,  0x89c8), (82,  0x9562), (85,  0xe25d), (88,  0x94e9), (95,  0x9164), (97,  0xe260), 
                  (99,  0xe261), (100, 0x9489), (102, 0x9060), (103, 0xe25e), (105, 0x9281), (108, 0xe25f), (112, 0x8fcc), (123, 0x88da) ],
        109 => &[ (0,   0x8b48), (8,   0xe262), (11,  0x92f6), (13,  0xe263), (14,  0x90c5), (20,  0x96ab), (23,  0x9542), (24,  0xe264), 
                  (25,  0xe265), (26,  0x9274), (28,  0x97c5), (31,  0xe267), (32,  0xe266), (46,  0x8eed), (49,  0xe269), (50,  0x88ee), 
                  (55,  0xe26c), (59,  0xe26a), (60,  0x89d2), (61,  0x8c6d), (62,  0xe26b), (63,  0x8d65), (64,  0x8d92), (66,  0x95e4), 
                  (67,  0xe26d), (70,  0x9673), (73,  0xe26f), (77,  0x90cf), (78,  0x896e), (79,  0x89b8), (80,  0x88aa), (87,  0xe26e), 
                  (97,  0xe270), (98,  0xe271), (99,  0x8ff5), (105, 0xe272), (107, 0x8a6e), (112, 0xe274), (116, 0x8c8a), (118, 0x8b86), 
                  (121, 0xe275), (122, 0x8bf3), (125, 0xe276), (127, 0x90fa) ],
        110 => &[ (1,   0x93cb), (3,   0x90de), (4,   0x8df3), (8,   0xe277), (18,  0x9282), (19,  0x918b), (21,  0xe279), (22,  0xe27b), 
                  (23,  0xe278), (24,  0xe27a), (31,  0x8c41), (41,  0xe27c), (42,  0x8c45), (46,  0x8b87), (47,  0x9771), (48,  0xe27e), 
                  (54,  0xe280), (58,  0x894d), (63,  0xe283), (67,  0x8a96), (68,  0xe282), (69,  0xe281), (71,  0xe285), (72,  0xe27d), 
                  (74,  0xe286), (75,  0x97a7), (77,  0xe287), (79,  0xe288), (81,  0xfb84), (82,  0x9af2), (83,  0xe28a), (85,  0xe289), 
                  (89,  0xe28b), (90,  0xe28c), (92,  0x97b3), (93,  0xe28d), (95,  0xe8ed), (96,  0x8fcd), (97,  0xe28e), (98,  0xe28f), 
                  (99,  0x8f76), (101, 0x93b6), (102, 0xe290), (103, 0xfb85), (106, 0x9247), (107, 0xfb87), (109, 0xe291), (111, 0x925b), 
                  (112, 0xe292), (118, 0x8ba3), (120, 0x995e), (121, 0x927c), (122, 0x8eb1), (127, 0x8ac6) ],
        111 => &[ (2,   0xe293), (4,   0xe2a0), (6,   0xe296), (8,   0x8b88), (10,  0xe295), (11,  0xe2a2), (15,  0xe294), (17,  0x8fce), 
                  (24,  0xe298), (25,  0xe299), (27,  0x934a), (30,  0xe29a), (32,  0x8a7d), (37,  0x9079), (38,  0x9584), (40,  0xe29c), 
                  (44,  0x91e6), (51,  0xe297), (53,  0xe29b), (54,  0xe29d), (57,  0x8df9), (69,  0xe2a4), (70,  0x954d), (72,  0x94a4), 
                  (73,  0x9399), (75,  0x8bd8), (76,  0xe2a3), (77,  0xe2a1), (79,  0x94b3), (80,  0xe29e), (81,  0x927d), (82,  0x939b), 
                  (84,  0x939a), (86,  0x8df4), (93,  0xe2b6), (101, 0xe2a6), (103, 0xe2a8), (108, 0xe2ab), (110, 0xe2ac), (112, 0xe2a9), 
                  (113, 0xe2aa), (116, 0xe2a7), (117, 0xe2a5), (122, 0xe29f) ],
        112 => &[ (6,   0x95cd), (7,   0x89d3), (11,  0xe2b3), (13,  0xe2b0), (15,  0xe2b5), (18,  0xe2b4), (20,  0x9493), (21,  0x96a5), 
                  (23,  0x8e5a), (24,  0xe2ae), (25,  0xe2b7), (26,  0xe2b2), (28,  0xe2b1), (29,  0xe2ad), (30,  0xfb88), (31,  0xe2af), 
                  (33,  0x8ac7), (42,  0x925c), (45,  0x90fb), (49,  0x94a0), (52,  0xe2bc), (56,  0x94a2), (64,  0x90df), (65,  0xe2b9), 
                  (68,  0x94cd), (70,  0xe2bd), (71,  0x95d1), (73,  0x927a), (75,  0xe2b8), (76,  0xe2ba), (79,  0xe2bb), (93,  0xe2be), 
                  (96,  0x8ec2), (100, 0x93c4), (101, 0xe2c3), (102, 0xe2c2), (105, 0xe2bf), (109, 0x9855), (115, 0xe2c8), (118, 0xe2cc), 
                  (119, 0xe2c9) ],
        113 => &[ (0,   0xe2c5), (7,   0xe2c6), (13,  0xe2cb), (17,  0xe2c0), (18,  0x99d3), (19,  0xe2c7), (20,  0xe2c1), (23,  0xe2ca), 
                  (31,  0xe2d0), (33,  0x8ac8), (35,  0xe2cd), (39,  0xe2ce), (42,  0xe2cf), (43,  0xe2d2), (55,  0xe2d1), (56,  0x94f4), 
                  (61,  0xe2d3), (62,  0x97fa), (63,  0x95eb), (64,  0xe2d8), (67,  0xe2d5), (76,  0xe2d4), (77,  0x90d0), (79,  0xe2d7), 
                  (80,  0xe2d9), (84,  0xe2d6), (86,  0xe2dd), (88,  0xe2da), (95,  0xe2db), (96,  0xe2c4), (100, 0xe2dc), (101, 0xe2de), 
                  (108, 0xe2df), (115, 0x95c4), (117, 0xe2e0), (126, 0x96e0) ],
        114 => &[ (1,   0x8bcc), (2,   0x8c48), (3,   0xe2e1), (9,   0x95b2), (11,  0x9088), (13,  0x96ae), (16,  0xe2e2), (18,  0x97b1), 
                  (21,  0x9494), (23,  0x9165), (24,  0x9453), (27,  0x8f6c), (31,  0x88be), (33,  0xe2e7), (34,  0xe2e5), (36,  0xe2e3), 
                  (37,  0x8a9f), (39,  0x8fcf), (40,  0xe2e8), (43,  0xe2e6), (45,  0xe2e4), (46,  0xe2ec), (49,  0xe2eb), (50,  0xe2ea), 
                  (51,  0xe2e9), (57,  0xe2ed), (61,  0xe2ee), (62,  0x90b8), (64,  0xe2ef), (66,  0xe2f1), (69,  0xe2f0), (74,  0x8cd0), 
                  (78,  0x9157), (82,  0xe2f3), (86,  0x939c), (88,  0xe2f2), (92,  0xe2f4), (94,  0x95b3), (95,  0x918c), (96,  0x8d66), 
                  (98,  0xe2f5), (103, 0x97c6), (111, 0xe2f7), (114, 0xe2f8), (116, 0xe2f9), (118, 0xe2fa), (120, 0x8e85), (122, 0xe2fb), 
                  (123, 0x8c6e), (126, 0x8b8a) ],
        115 => &[ (0,   0x8b49), (2,   0xe340), (4,   0x96f1), (5,   0x8d67), (6,   0xe2fc), (10,  0xe343), (11,  0x96e4), (13,  0x945b), 
                  (16,  0x9552), (20,  0x8f83), (21,  0xe342), (23,  0x8ed1), (24,  0x8d68), (25,  0x8e86), (26,  0x8b89), (27,  0x95b4), 
                  (28,  0xe341), (32,  0x9166), (33,  0x9661), (34,  0x8df5), (43,  0x8e87), (44,  0x92db), (46,  0xe346), (47,  0x97dd), 
                  (48,  0x8dd7), (50,  0xe347), (51,  0x9061), (53,  0xe349), (57,  0x8fd0), (58,  0x8dae), (63,  0xe348), (66,  0x8f49), 
                  (67,  0x8cbc), (68,  0x9167), (69,  0xe344), (70,  0xe34a), (72,  0xfb8a), (75,  0xe345), (76,  0x8c6f), (78,  0xe34d), 
                  (79,  0xe351), (80,  0x8c8b), (86,  0xe34c), (91,  0xe355), (92,  0xfb8b), (94,  0x8d69), (97,  0x978d), (98,  0x88ba), 
                  (99,  0xe352), (102, 0x8b8b), (104, 0xe34f), (110, 0xe350), (113, 0x939d), (114, 0xe34e), (115, 0xe34b), (117, 0x8a47), 
                  (118, 0x90e2), (121, 0x8ca6), (125, 0xe357) ],
        116 => &[ (9,   0xe354), (15,  0xe356), (19,  0xe353), (25,  0x8c70), (26,  0x91b1), (27,  0xe358), (28,  0x918e), (31,  0xe365), 
                  (32,  0xfb8d), (34,  0xe361), (35,  0xe35b), (43,  0xe35f), (44,  0x8ef8), (45,  0x88db), (46,  0xe35a), (47,  0xe362), 
                  (48,  0xe366), (49,  0x8d6a), (50,  0x96d4), (52,  0x92d4), (53,  0xe35c), (55,  0xfb8c), (56,  0xe364), (58,  0xe359), 
                  (59,  0x925d), (61,  0xe35e), (62,  0x88bb), (63,  0x96c8), (71,  0xe35d), (74,  0x8bd9), (75,  0x94ea), (79,  0x918d), 
                  (81,  0x97ce), (82,  0x8f8f), (85,  0xe38e), (86,  0xfb8e), (88,  0xe367), (90,  0x90fc), (92,  0xe363), (93,  0xe368), 
                  (94,  0xe36a), (96,  0x92f7), (97,  0xe36d), (100, 0xe369), (104, 0x95d2), (105, 0x8ac9), (108, 0x96c9), (111, 0x88dc), 
                  (114, 0xe36c), (116, 0x97fb), (123, 0xe36b) ],
        117 => &[ (1,   0x898f), (4,   0x93ea), (5,   0xe36e), (9,   0xe375), (10,  0xe36f), (11,  0xe376), (18,  0xe372), (27,  0x949b), 
                  (30,  0x8ec8), (31,  0xe374), (33,  0xe371), (34,  0xe377), (35,  0xe370), (38,  0x8f63), (43,  0x9644), (46,  0x8f6b), 
                  (49,  0xe373), (50,  0xe380), (53,  0xe37b), (55,  0xe37e), (57,  0xe37c), (58,  0xe381), (59,  0xe37a), (61,  0xe360), 
                  (62,  0x90d1), (65,  0x94c9), (67,  0xe37d), (70,  0xe378), (74,  0x9140), (75,  0x8c71), (77,  0x8f4a), (82,  0xfb8f), 
                  (84,  0x9044), (85,  0x9155), (86,  0xe384), (89,  0xe386), (90,  0xe387), (93,  0xe383), (94,  0xe385), (102, 0xe379), 
                  (103, 0xe382), (105, 0xe38a), (106, 0xe389), (109, 0x969a), (112, 0x8c4a), (121, 0xe388), (123, 0xe38c), (124, 0xe38b), 
                  (125, 0xe38f), (127, 0xe391) ],
        118 => &[ (2,   0x8e5b), (3,   0xe38d), (8,   0xe392), (9,   0xe393), (10,  0xfa5c), (12,  0xe394), (14,  0xe39a), (15,  0x935a), 
                  (16,  0xe396), (18,  0xe395), (19,  0xe397), (20,  0xe398), (22,  0xe399), (27,  0xe39b), (28,  0xe39c) ],
        119 => &[ (54,  0x8aca), (56,  0xe39d), (58,  0xe39e), (69,  0xe39f), (71,  0xfb90), (76,  0xe3a0), (77,  0xe3a1), (78,  0xe3a2), 
                  (80,  0xe3a3), (81,  0xe3a4), (84,  0xe3a6), (85,  0xe3a5), (88,  0xe3a7), (95,  0xe3a8), (96,  0xe3a9), (103, 0xe3ac), 
                  (104, 0xe3aa), (105, 0xe3ab), (106, 0x8ddf), (107, 0x8c72), (110, 0x9275), (112, 0x94b1), (114, 0x8f90), (117, 0x946c), 
                  (119, 0x94eb), (120, 0xe3ad), (121, 0x9ceb) ],
        120 => &[ (2,   0xe3ae), (3,   0xe3b0), (5,   0x9785), (6,   0xe3af), (7,   0xe3b2), (8,   0xe3b1), (10,  0x9772), (12,  0xe3b3), 
                  (14,  0x94fc), (20,  0xe3b4), (26,  0xe3b7), (29,  0xe3b6), (30,  0xe3b5), (33,  0xfb91), (35,  0xe3b8), (36,  0x8c51), 
                  (40,  0x9141), (41,  0x8b60), (46,  0xe3bc), (47,  0xe3b9), (50,  0xe3ba), (54,  0xe3bd), (56,  0xe3be), (57,  0xe3bb), 
                  (61,  0x8948), (65,  0x89a5), (69,  0xe3c0), (70,  0xe3c1), (74,  0xe3c2), (76,  0x9782), (82,  0x8f4b), (84,  0xe3c4), 
                  (85,  0xe3c3), (96,  0x9089), (97,  0xe3c5), (102, 0xe3c6), (105, 0xe3c7), (107, 0x8ae3), (112, 0x8acb), (115, 0xe3c8), 
                  (121, 0xe3c9), (123, 0x967c), (124, 0x9783) ],
        121 => &[ (0,   0x9773), (1,   0x9856), (3,   0x8d6c), (4,   0xe3cc), (5,   0x8ed2), (6,   0xe3cb), (11,  0xe3cd), (12,  0x8ea7), 
                  (16,  0x91cf), (18,  0xe3ce), (21,  0x8d6b), (23,  0x96d5), (24,  0xe3cf), (25,  0xe3d0), (28,  0xe3d1), (33,  0xe3d2), 
                  (40,  0xe3d3), (51,  0x8ea8), (54,  0x96eb), (59,  0xe3d5), (61,  0x925e), (63,  0xe3d4), (70,  0xe3d7), (74,  0xe3d6), 
                  (82,  0xe3d8), (86,  0x90b9), (88,  0xe3d9), (90,  0xe3da), (94,  0x95b7), (95,  0xe3db), (97,  0x918f), (98,  0xe3dc), 
                  (104, 0xe3dd), (111, 0x97fc), (112, 0xe3e0), (114, 0xe3df), (115, 0xe3de), (116, 0x92ae), (118, 0xe3e1), (119, 0x9045), 
                  (121, 0xe3e2), (125, 0xe3e3), (126, 0x9857), (127, 0xe3e4) ],
        122 => &[ (4,   0xe3e5), (5,   0xe3e7), (6,   0xe3e6), (7,   0x94a3), (9,   0x93f7), (11,  0x985d), (12,  0x94a7), (19,  0xe3e9), 
                  (22,  0x8fd1), (24,  0x9549), (26,  0xe3ea), (27,  0xe3e8), (29,  0x8acc), (33,  0x8cd2), (34,  0x8e88), (37,  0x94ec), 
                  (41,  0x8ca8), (42,  0x9662), (44,  0xe3ed), (45,  0xe3eb), (47,  0x8d6d), (49,  0x8d6e), (50,  0x88e7), (52,  0x8de6), 
                  (58,  0x9478), (67,  0x88dd), (68,  0xe3f2), (70,  0x925f), (76,  0x9477), (78,  0x91d9), (86,  0xe3f4), (89,  0xe3f0), 
                  (90,  0xe3f3), (91,  0xe3ee), (93,  0xe3f1), (94,  0x9645), (97,  0x8cd3), (100, 0x88fb), (101, 0xe3ef), (111, 0xe3f6), 
                  (113, 0xe3f7), (116, 0x93b7), (120, 0x8bb9), (124, 0xe445), (125, 0x945c) ],
        123 => &[ (2,   0x8e89), (5,   0x8bba), (6,   0x90c6), (7,   0x9865), (8,   0x96ac), (9,   0xe3f5), (10,  0x90d2), (26,  0x8b72), 
                  (27,  0xe3f8), (35,  0xe3fa), (41,  0xe3f9), (47,  0xe3fb), (49,  0x9245), (51,  0x945d), (57,  0x92af), (62,  0xe442), 
                  (70,  0xe441), (75,  0xe3fc), (78,  0x9074), (80,  0x9585), (81,  0xe444), (83,  0xe443), (84,  0x8d6f), (85,  0x9872), 
                  (95,  0xe454), (101, 0xe448), (102, 0xe449), (107, 0x8eee), (110, 0xe447), (112, 0x8d98), (113, 0xe446), (116, 0xe44a), 
                  (120, 0x92b0), (121, 0x95a0), (122, 0x9142), (127, 0x91da) ],
        124 => &[ (0,   0xe44e), (2,   0xe44f), (3,   0xe44b), (8,   0xe44c), (10,  0xe44d), (15,  0x8d70), (19,  0xe455), (21,  0xe451), 
                  (26,  0x9586), (28,  0x968c), (29,  0x9547), (32,  0xe450), (35,  0xe453), (36,  0xe452), (40,  0x9663), (41,  0xe456), 
                  (48,  0xe457), (51,  0x9156), (53,  0xe458), (56,  0xe45a), (58,  0xe45e), (61,  0xe45b), (62,  0xe459), (63,  0x945e), 
                  (64,  0xe45c), (66,  0xe45d), (70,  0x89b0), (72,  0xe464), (73,  0xe45f), (77,  0xe460), (81,  0xe461), (83,  0x919f), 
                  (88,  0xe463), (89,  0xe462), (90,  0xe465), (95,  0xe466), (96,  0xe467), (99,  0x9062), (101, 0x89e7), (103, 0xe468), 
                  (104, 0x97d5), (106, 0x8ea9), (109, 0x8f4c), (115, 0x8e8a), (116, 0x9276), (122, 0xe469), (123, 0xe46a), (124, 0x8950), 
                  (126, 0xe46b) ],
        125 => &[ (1,   0xe46c), (2,   0xe46d), (5,   0xe46e), (7,   0xe46f), (8,   0x8bbb), (9,   0x9da8), (10,  0xe470), (12,  0x90e3), 
                  (13,  0xe471), (14,  0x8ec9), (16,  0xe472), (18,  0x98ae), (22,  0xe473), (23,  0x95dc), (24,  0x8ada), (27,  0x9143), 
                  (28,  0x8f77), (30,  0x9591), (31,  0x8f4d), (41,  0xe474), (42,  0x8d71), (43,  0xe475), (44,  0x94ca), (46,  0xe484), 
                  (51,  0xe477), (53,  0x91c7), (54,  0x9495), (55,  0x8cbd), (56,  0xe476), (57,  0x9144), (64,  0xe478), (71,  0x92f8), 
                  (88,  0xe47a), (89,  0xe479), (90,  0xe47c), (93,  0xe47b), (95,  0xe47d), (98,  0xe480), (100, 0xe47e), (102, 0x8acd), 
                  (104, 0xe481), (106, 0xe482), (107, 0xe483), (110, 0x8daf), (111, 0x97c7), (113, 0xe485), (114, 0x9046), (118, 0x8990), 
                  (119, 0xe486), (120, 0xe487), (126, 0xe488) ],
        126 => &[ (11,  0x88f0), (13,  0xe489), (18,  0xe48a), (25,  0x9587), (29,  0x8ec5), (31,  0xe48c), (37,  0x8a48), (38,  0x88b0), 
                  (43,  0xe48b), (44,  0xe48e), (45,  0x946d), (47,  0x9063), (49,  0x89d4), (51,  0x9646), (56,  0x8c7c), (57,  0x8bda), 
                  (59,  0xe48d), (61,  0x89e8), (69,  0x8aa1), (81,  0x8991), (82,  0xe492), (83,  0x97e8), (84,  0x91db), (87,  0x9563), 
                  (89,  0xe49e), (91,  0x89d5), (92,  0xe49c), (94,  0xe49a), (95,  0xe491), (97,  0xe48f), (99,  0xe490), (101, 0x8ee1), 
                  (102, 0x8bea), (103, 0x9297), (107, 0x93cf), (113, 0x8970), (115, 0xe494), (116, 0xe493), (121, 0xe499), (122, 0xe495), 
                  (123, 0xe498) ],
        127 => &[ (1,   0xfb93), (2,   0x96ce), (3,   0xe497), (4,   0x89d6), (5,   0x8a9d), (6,   0xe49b), (9,   0xe49d), (14,  0x8c73), 
                  (22,  0xe4a1), (23,  0xe4aa), (24,  0xe4ab), (28,  0x88a9), (35,  0xe4b2), (40,  0x88ef), (43,  0xe4a9), (47,  0xe4a8), 
                  (49,  0xe4a3), (50,  0xe4a2), (52,  0xe4a0), (53,  0xe49f), (54,  0x9283), (56,  0x91f9), (57,  0xe4a5), (64,  0xe4a4), 
                  (69,  0xe4a7), (73,  0x9190), (74,  0x8c74), (79,  0x8960), (80,  0xe4a6), (82,  0x8d72), (88,  0x9191), (98,  0xfb94), 
                  (115, 0xe4b8), (117, 0xe4b9), (119, 0x89d7), (123, 0x89ac), (124, 0xe4b6), (127, 0xfb95) ],
        128 => &[ (5,   0xe4ac), (7,   0xe4b4), (9,   0xe4bb), (10,  0xe4b5), (14,  0xe4b3), (19,  0xe496), (22,  0xe4b1), (26,  0xe4ad), 
                  (30,  0x8ace), (31,  0xe4af), (32,  0xe4ba), (34,  0xe4b0), (40,  0xe4bc), (42,  0xe4ae), (43,  0x949c), (49,  0x9789), 
                  (53,  0xe4b7), (61,  0xe4cd), (65,  0xe4c5), (69,  0x909b), (71,  0xfb96), (74,  0x8b65), (76,  0x8bdb), (78,  0xe4c0), 
                  (83,  0x89d9), (86,  0x8fd2), (88,  0xe4c3), (92,  0x8dd8), (95,  0x9370), (96,  0xe4c8), (105, 0x95ec), (107, 0xe4bf), 
                  (111, 0x89d8), (112, 0x8cd4), (113, 0x9548), (114, 0xe4c9), (116, 0xe4bd), (118, 0xfb97), (119, 0xe4c6), (123, 0xe4d0), 
                  (125, 0xe4c1) ],
        129 => &[ (3,   0xe4c2), (4,   0x93b8), (7,   0xe4c7), (11,  0xe4c4), (12,  0x9647), (13,  0xe4ca), (14,  0x88de), (19,  0xe4be), 
                  (32,  0xe4cc), (34,  0xe4cb), (41,  0x948b), (42,  0xe4d2), (44,  0xe4dd), (49,  0x8a9e), (53,  0xe4e0), (56,  0xe4ce), 
                  (60,  0xe4d3), (61,  0x978e), (70,  0xe4dc), (72,  0xfb98), (73,  0x9774), (78,  0x97a8), (87,  0x9298), (91,  0x8a8b), 
                  (97,  0x9592), (98,  0xe4e2), (99,  0x939f), (102, 0x88af), (105, 0xe4db), (107, 0xe4d7), (108, 0x9192), (109, 0xe4d1), 
                  (110, 0xe4d9), (111, 0xe4de), (113, 0x944b), (117, 0x88a8), (119, 0xe4d6), (121, 0xe4df), (122, 0x9598) ],
        130 => &[ (2,   0xe4da), (4,   0xe4d5), (11,  0x8fd3), (16,  0x8f4e), (20,  0x8eaa), (25,  0x96d6), (28,  0x9566), (31,  0xe4e5), 
                  (33,  0xe4ee), (45,  0xe4d8), (50,  0x8a97), (52,  0xfb99), (56,  0x8ff6), (57,  0xe4e3), (59,  0xe4e8), (60,  0x9193), 
                  (63,  0xe4e4), (65,  0xe4eb), (68,  0x927e), (70,  0xe4ec), (73,  0x9775), (74,  0xe4e1), (75,  0x8a57), (77,  0xe4e7), 
                  (80,  0xe4ea), (81,  0x96aa), (86,  0xe4ed), (89,  0xe4e6), (90,  0xe4e9), (92,  0xfa60), (108, 0x9648), (110, 0x9840), 
                  (116, 0xe4f1), (124, 0xe4f8), (127, 0xe4f0) ],
        131 => &[ (0,   0x8ec1), (6,   0xe4cf), (17,  0x95cc), (19,  0x96a0), (20,  0xe4f7), (21,  0xe4f6), (23,  0xe4f2), (24,  0xe4f3), 
                  (26,  0x8955), (31,  0xe4f5), (33,  0xe4ef), (38,  0x92d3), (44,  0xe4f4), (45,  0x88fc), (53,  0x91a0), (61,  0x95c1), 
                  (64,  0xe4f9), (65,  0xe540), (67,  0x94d7), (72,  0xe4fc), (73,  0x8fd4), (74,  0x8ec7), (75,  0xe542), (78,  0x8bbc), 
                  (83,  0xfb9a), (85,  0xe543), (87,  0x9599), (88,  0xe4fb), (89,  0xfb9b), (90,  0xe4d4), (99,  0xe4fa), (104, 0x986e), 
                  (105, 0x93a0), (106, 0x9593), (107, 0xfb9c), (109, 0xe54a), (119, 0xe550), (126, 0xe551) ],
        132 => &[ (0,   0xe544), (4,   0x9496), (7,   0xe54e), (8,   0xe546), (10,  0xe548), (16,  0xe552), (17,  0xe547), (20,  0xe54b), 
                  (23,  0x8992), (25,  0x93e3), (27,  0xe54c), (28,  0xe54f), (36,  0xe545), (38,  0x9145), (40,  0xe549), (41,  0x8e46), 
                  (42,  0x9064), (43,  0x8c4f), (44,  0x96f2), (46,  0x96f7), (47,  0x8f92), (48,  0xfb9e), (57,  0xe556), (58,  0xe554), 
                  (65,  0x986d), (73,  0xe553), (77,  0x9795), (79,  0xe555), (80,  0xe557), (85,  0xe558), (92,  0xe55b), (93,  0xe559), 
                  (100, 0x93a1), (101, 0xe55a), (105, 0x94cb), (106, 0xe54d), (119, 0x8f93), (121, 0xe55c), (122, 0xe561), (123, 0x9194), 
                  (126, 0xe560) ],
        133 => &[ (2,   0xe541), (6,   0xe562), (7,   0x9168), (10,  0xe55d), (11,  0xe55f), (19,  0xe55e), (22,  0x9f50), (23,  0x9f41), 
                  (26,  0xe564), (34,  0xe563), (45,  0x9796), (47,  0xe1ba), (48,  0xe565), (63,  0xe566), (77,  0xe567), (78,  0x8cd5), 
                  (80,  0x8b73), (84,  0xe569), (85,  0x997c), (90,  0x8b95), (92,  0x97b8), (94,  0x8bf1), (95,  0xe56a), (103, 0xe56b), 
                  (107, 0x928e), (113, 0xe56c), (121, 0x93f8), (123, 0x88b8) ],
        134 => &[ (10,  0x89e1), (11,  0xe571), (12,  0xe572), (19,  0xe56d), (21,  0x8e5c), (35,  0xe56e), (36,  0x9461), (41,  0xe56f), 
                  (42,  0xe570), (43,  0xe57a), (47,  0xe574), (48,  0xe577), (54,  0xe573), (68,  0xe575), (70,  0xe576), (71,  0x8ed6), 
                  (73,  0xe578), (75,  0x9260), (77,  0x8c75), (78,  0x8a61), (84,  0xe57b), (89,  0x8a5e), (91,  0xe581), (94,  0xe57c), 
                  (95,  0xe580), (100, 0x94b8), (105, 0xe57d), (108, 0xe57e), (109, 0x9567), (110, 0x94d8), (111, 0xe582), (120, 0x91fb), 
                  (121, 0xe58c), (123, 0xe588), (126, 0x89e9) ],
        135 => &[ (0,   0xe586), (2,   0x9649), (3,   0xe587), (6,   0xe584), (8,   0xe585), (9,   0xe58a), (10,  0xe58d), (13,  0xe58b), 
                  (17,  0xe589), (18,  0xe583), (24,  0x9277), (26,  0xe594), (28,  0x96a8), (37,  0xe592), (41,  0xe593), (52,  0xe58e), 
                  (55,  0xe590), (59,  0xe591), (63,  0xe58f), (73,  0x90e4), (75,  0x9858), (76,  0xe598), (78,  0xe599), (83,  0xe59f), 
                  (85,  0x9049), (87,  0xe59b), (89,  0xe59e), (95,  0xe596), (96,  0xe595), (99,  0xe5a0), (102, 0x89da), (104, 0xe59c), 
                  (106, 0xe5a1), (110, 0xe59d), (116, 0xe59a), (118, 0x92b1), (120, 0xe597), (127, 0x9488) ],
        136 => &[ (2,   0xe5a5), (13,  0x975a), (31,  0xe5a4), (34,  0xe5a3), (43,  0xe5ac), (47,  0xe5a6), (51,  0xe5ae), (58,  0x9786), 
                  (59,  0xe5b1), (61,  0xe5a8), (64,  0xe5a9), (68,  0xe5ad), (70,  0xe5b0), (71,  0xe5af), (75,  0xe5a7), (80,  0xe5aa), 
                  (82,  0xe5bb), (96,  0xe5b4), (111, 0xe5b2), (114, 0xe5b3), (118, 0xe5b8), (119, 0xe5b9), (121, 0x8a49), (123, 0x8b61), 
                  (126, 0xe5b7) ],
        137 => &[ (5,   0xe5a2), (7,   0xfba1), (13,  0xe5b6), (14,  0xe5ba), (15,  0xe5b5), (17,  0xe5bc), (21,  0xe5be), (22,  0xe5bd), 
                  (33,  0xe5c0), (34,  0xe5bf), (35,  0xe579), (39,  0xe5c4), (49,  0xe5c1), (54,  0xe5c2), (57,  0xe5c3), (59,  0xe5c5), 
                  (64,  0x8c8c), (66,  0xe5c7), (68,  0xe5c6), (70,  0x8f4f), (76,  0x8d73), (77,  0x9fa5), (82,  0xe5c8), (83,  0x8f70), 
                  (87,  0x8a58), (89,  0xe5c9), (91,  0x8971), (93,  0x8fd5), (94,  0xe5ca), (97,  0x8d74), (98,  0xe5cb), (99,  0x88df), 
                  (104, 0x955c), (107, 0xe5cc), (112, 0x908a), (114, 0xe5d3), (117, 0xe5d0), (119, 0x928f), (125, 0xe5d1), (126, 0xe5ce), 
                  (127, 0x8bdc) ],
        138 => &[ (1,   0xe5cd), (2,   0xe5d4), (8,   0x8c55), (11,  0x91dc), (13,  0xe5da), (18,  0xe5d6), (22,  0x91b3), (23,  0xe5d5), 
                  (25,  0xe5d8), (30,  0xe5cf), (34,  0xe5d9), (36,  0xe5db), (43,  0x94ed), (46,  0xe5d7), (48,  0xe5dc), (49,  0xe5de), 
                  (52,  0x8cd1), (53,  0xe5d2), (55,  0x88bf), (63,  0xe5dd), (65,  0x8dd9), (66,  0x97f4), (67,  0xe5df), (68,  0xe5e0), 
                  (69,  0x9195), (79,  0x97a0), (84,  0xe5e1), (85,  0x9754), (88,  0xe5e2), (89,  0xe5e3), (92,  0x95e2), (93,  0xe5e4), 
                  (95,  0x8dbe), (97,  0x97a1), (104, 0xe5e9), (114, 0xe5ea), (115, 0x8fd6), (116, 0xe5e8), (117, 0xfba2), (120, 0x9787), 
                  (121, 0xe5e5), (124, 0xe5e7), (125, 0x90bb), (126, 0x909e) ],
        139 => &[ (2,   0xe5e6), (4,   0xe5eb), (7,   0x95a1), (10,  0xe5ed), (12,  0xe5ec), (16,  0x8a8c), (18,  0x964a), (19,  0xe5ee), 
                  (28,  0xfa5d), (29,  0xe5fa), (30,  0xe5f0), (37,  0xe5f1), (42,  0xe5f2), (43,  0xe5f3), (54,  0xe5f7), (56,  0xe5f8), 
                  (59,  0xe5f6), (65,  0xe5f4), (67,  0xe5ef), (68,  0xe5f5), (76,  0xe5f9), (77,  0xe8b5), (86,  0x89a6), (94,  0xe5fc), 
                  (95,  0x8bdd), (96,  0xe5fb), (100, 0xe641), (102, 0xe640), (106, 0xe643), (109, 0xe642), (111, 0xe644), (114, 0x8f50), 
                  (116, 0xe645), (119, 0xe646), (126, 0xe647), (127, 0x90bc) ],
        140 => &[ (1,   0x9776), (3,   0xe648), (6,   0x95a2), (7,   0x9465), (8,   0xe649), (10,  0xe64a), (11,  0x8ca9), (15,  0x8b4b), 
                  (19,  0xe64b), (22,  0x8e8b), (23,  0x9460), (24,  0xe64c), (26,  0x8a6f), (33,  0xe64d), (38,  0xe64f), (39,  0x9797), 
                  (41,  0xe64e), (42,  0x9065), (44,  0xe650), (47,  0xe651), (50,  0xe652), (51,  0x8acf), (58,  0xe653), (61,  0xe654), 
                  (63,  0xe655), (64,  0xe656), (82,  0x8a70), (90,  0xe657), (92,  0xe658), (93,  0xe659), (99,  0x89f0), (102, 0x9047), 
                  (103, 0xe65a), (116, 0xe65b), (120, 0xe65c) ],
        141 => &[ (0,   0x8cbe), (2,   0x92f9), (3,   0xe65d), (8,   0x8c76), (10,  0x9075), (12,  0xe660), (14,  0x93a2), (16,  0xe65f), 
                  (18,  0xfba3), (19,  0x8c50), (22,  0xe65e), (23,  0x91f5), (24,  0x8b4c), (27,  0xe661), (29,  0xe662), (31,  0x8fd7), 
                  (35,  0x8c8d), (37,  0xe663), (42,  0x964b), (45,  0x90dd), (49,  0x8b96), (51,  0x96f3), (52,  0x9169), (54,  0xe664), 
                  (55,  0xfba4), (58,  0x9066), (59,  0x9290), (60,  0x8fd8), (65,  0xe665), (70,  0xe668), (72,  0xe669), (80,  0x8dbc), 
                  (81,  0x91c0), (82,  0xe667), (84,  0x8fd9), (85,  0x955d), (91,  0xe666), (94,  0x8e8c), (96,  0x8972), (98,  0xe66d), 
                  (99,  0x8c77), (102, 0x8e8e), (105, 0x8e8d), (107, 0x986c), (108, 0xe66c), (109, 0xe66b), (110, 0x9146), (112, 0x8b6c), 
                  (113, 0x9862), (114, 0x8a59), (115, 0x8fda), (121, 0xfba5), (124, 0xe66a) ],
        142 => &[ (2,   0xe66f), (4,   0xe670), (5,   0xe66e), (7,   0x8cd6), (9,   0x975f), (12,  0x8e8f), (13,  0x9446), (17,  0xe673), 
                  (19,  0x90be), (21,  0x9261), (24,  0x9755), (26,  0xe676), (30,  0x8cea), (32,  0x90bd), (33,  0xe672), (35,  0xe677), 
                  (36,  0x8ceb), (37,  0xe674), (38,  0xe675), (39,  0xfba6), (40,  0xe671), (44,  0x90e0), (45,  0x93c7), (48,  0x924e), 
                  (50,  0x89db), (57,  0x94ee), (60,  0x8b62), (62,  0xfba7), (63,  0x92b2), (66,  0xe67a), (68,  0xe678), (71,  0x926b), 
                  (75,  0x90bf), (76,  0x8ad0), (77,  0xe679), (79,  0x907a), (82,  0x97c8), (86,  0x985f), (90,  0xe67b), (91,  0xe687), 
                  (92,  0x92b3), (94,  0xe686), (95,  0xfba8), (96,  0xe683), (97,  0xe68b), (98,  0xe684), (100, 0xe680), (102, 0x92fa), 
                  (103, 0xe67e), (107, 0xe67c), (109, 0x9740), (110, 0x8e90), (113, 0xe681), (115, 0xe67d), (118, 0xfbaa), (119, 0xe685), 
                  (120, 0x8f94), (122, 0x8cbf), (126, 0x91f8) ],
        143 => &[ (0,   0x9664), (1,   0x8979), (2,   0x88e0), (4,   0x93a3), (7,   0xe689), (12,  0xe688), (14,  0x93e4), (16,  0xe68d), 
                  (20,  0xe682), (22,  0xe68c), (23,  0xe68e), (25,  0x8caa), (26,  0xe68a), (27,  0x8d75), (29,  0x8ed3), (32,  0xe68f), 
                  (33,  0x9777), (38,  0xe692), (40,  0xe695), (43,  0xe693), (44,  0x9554), (51,  0xe690), (57,  0x8bde), (62,  0xe694), 
                  (65,  0xe696), (73,  0xe69a), (76,  0xe697), (78,  0xe699), (79,  0xe698), (83,  0xfbab), (86,  0xe69b), (88,  0x8eaf), 
                  (90,  0xe69d), (91,  0xe69c), (92,  0x9588), (95,  0xe69f), (102, 0x8c78), (107, 0xe69e), (108, 0xe6a0), (111, 0xe6a1), 
                  (112, 0x8b63), (113, 0xe3bf), (114, 0x8ff7), (116, 0xe6a2), (119, 0x8cec), (125, 0xe6a3), (127, 0xfbac) ],
        144 => &[ (0,   0xe6a4), (3,   0x8e5d), (10,  0x9dcc), (12,  0xe6a5), (14,  0xe6a6), (16,  0x8f51), (18,  0xe6a7), (19,  0xe6a8), 
                  (22,  0xe6a9), (25,  0xe6aa), (26,  0xe6ab) ],
        145 => &[ (55,  0x924a), (58,  0xe6ac), (63,  0xe6ae), (65,  0xe6ad), (70,  0x93a4), (72,  0xe6af), (74,  0x964c), (76,  0xe6b0), 
                  (78,  0xe6b1), (80,  0xe6b2), (85,  0xe6b3), (90,  0x93d8), (97,  0x8fdb), (98,  0xe6b4), (106, 0x8d8b), (107, 0x98ac), 
                  (108, 0xe6b5), (120, 0xe6b6), (121, 0x955e), (122, 0xe6b7), (124, 0xe6bf) ],
        146 => &[ (2,   0xe6b8), (5,   0xe6ba), (9,   0xe6b9), (10,  0xe6bb), (12,  0x9665), (13,  0xe6bc), (14,  0xe6bd), (20,  0xe6be), 
                  (24,  0xe6c0), (29,  0x8a4c), (30,  0x92e5), (32,  0x9589), (33,  0x8de0), (34,  0x8d76), (39,  0x956e), (40,  0x89dd), 
                  (41,  0x94cc), (42,  0xe6c3), (43,  0x8ad1), (44,  0x90d3), (45,  0xe6c2), (46,  0xe6c7), (47,  0x9299), (48,  0x96e1), 
                  (50,  0xe6c5), (51,  0xe6c6), (52,  0x8b4d), (54,  0xe6c8), (55,  0x9483), (56,  0x91dd), (59,  0x94ef), (60,  0x935c), 
                  (61,  0xe6c4), (63,  0x9666), (64,  0x89ea), (65,  0xe6ca), (66,  0x9847), (67,  0x92c0), (68,  0x9864), (71,  0x8e91), 
                  (72,  0xe6c9), (74,  0x91af), (77,  0xe6da), (78,  0x9147), (81,  0x93f6), (83,  0x956f), (90,  0xe6cd), (91,  0x8e5e), 
                  (92,  0x8e92), (94,  0x8fdc), (96,  0x9485), (98,  0x8cab), (99,  0xe6cc), (100, 0xe6cb), (102, 0x958a), (106, 0x8ebf), 
                  (109, 0x9371), (112, 0xfbad), (116, 0xfbae), (122, 0xe6cf), (123, 0xe6d0), (124, 0x8d77), (125, 0xe6ce) ],
        147 => &[ (4,   0xe6d1), (5,   0xe6d2), (7,   0xe6d4), (8,   0x91a1), (10,  0xe6d3), (11,  0x8ae4), (13,  0xe6d6), (15,  0xe6d5), 
                  (16,  0xe6d7), (18,  0xfbaf), (19,  0xe6d9), (20,  0xe6db), (22,  0xe6dc), (100, 0x90d4), (102, 0x8ecd), (103, 0xe6dd), 
                  (107, 0x8a71), (109, 0xe6de), (112, 0x9196), (113, 0xe6df), (115, 0xe6e0), (116, 0x958b), (118, 0xfbb0), (119, 0x8b4e) ],
        148 => &[ (1,   0xe6e1), (5,   0x92b4), (10,  0x897a), (25,  0xe6e2), (35,  0x8eef), (40,  0x9096), (51,  0x91ab), (58,  0xe6e5), 
                  (62,  0xe6e4), (66,  0xe6e3), (75,  0xe6eb), (76,  0xe6e9), (79,  0xe6e6), (86,  0xe6e8), (90,  0xe6e7), (91,  0xe6ea), 
                  (93,  0x8b97), (95,  0xe6ee), (97,  0x90d5), (99,  0xe6ef), (104, 0x8cd7), (106, 0xe6ec), (107, 0xe6ed), (111, 0x9848), 
                  (115, 0x92b5), (117, 0x9148), (124, 0xe6f0), (127, 0xe6f3) ],
        149 => &[ (8,   0xe6f1), (9,   0xe6f2), (10,  0x9778), (15,  0x93a5), (16,  0xe6f6), (29,  0xe6f4), (30,  0xe6f5), (31,  0xe6f7), 
                  (42,  0xe748), (48,  0xe6fa), (52,  0xe6fb), (53,  0xe6f9), (66,  0xe6f8), (68,  0x92fb), (71,  0xe740), (72,  0xe744), 
                  (73,  0xe741), (74,  0xe6fc), (76,  0xe742), (80,  0xe743), (85,  0xe74a), (89,  0xe745), (95,  0x90d6), (96,  0xe747), 
                  (99,  0xe749), (100, 0xe746), (114, 0xe74c), (116, 0x8f52), (118, 0xe74b), (124, 0xe74d) ],
        150 => &[ (1,   0xe74e), (4,   0xe751), (5,   0xe750), (7,   0xe74f), (10,  0xe753), (11,  0xe752), (13,  0x96f4), (17,  0xe755), 
                  (19,  0xe754), (20,  0xe756), (25,  0xe757), (33,  0xe759), (42,  0xe758), (43,  0x9067), (44,  0xe75a), (47,  0x8beb), 
                  (48,  0xe75b), (49,  0xe75d), (62,  0xe75e), (69,  0xe75f), (70,  0xe75c), (72,  0xe760), (74,  0x8ed4), (75,  0xe761), 
                  (76,  0x8b4f), (77,  0x8c52), (79,  0xfbb2), (82,  0x8cac), (91,  0xe762), (95,  0x93ee), (98,  0x935d), (99,  0xe763), 
                  (107, 0xe766), (120, 0x8eb2), (123, 0xe765), (124, 0xe764), (125, 0x8c79), (126, 0xe767) ],
        151 => &[ (3,   0x8a72), (5,   0xe769), (9,   0x8dda), (10,  0xe768), (12,  0xe771), (18,  0xe76b), (19,  0xe76d), (20,  0x95e3), 
                  (21,  0xe76a), (25,  0xe76c), (27,  0xe770), (28,  0xe76e), (29,  0x8b50), (31,  0xe76f), (38,  0xe772), (41,  0x9479), 
                  (42,  0x97d6), (47,  0x8f53), (51,  0xe773), (56,  0x9741), (57,  0xe775), (59,  0xe774), (62,  0xe778), (63,  0x9760), 
                  (66,  0xe777), (68,  0x8a8d), (69,  0xe776), (70,  0xe77b), (73,  0xe77a), (76,  0xe779), (77,  0x9351), (78,  0xe77c), 
                  (87,  0xe77d), (92,  0xe77e), (95,  0x8d8c), (97,  0x8c44), (98,  0xe780), (99,  0xe781), (100, 0xe782) ],
        152 => &[ (27,  0x9068), (28,  0xe783), (30,  0x8eab), (31,  0xe784), (35,  0xe785), (39,  0x999f), (40,  0x999e), (45,  0xe786), 
                  (46,  0xe390), (47,  0xe787), (48,  0x9243), (49,  0x904a), (50,  0x945f), (55,  0xe788), (58,  0x95d3), (59,  0x92d2), 
                  (60,  0x8d9e), (63,  0x9248), (66,  0x8949), (68,  0x9698), (69,  0x9076), (78,  0x8c7d), (81,  0x8bdf), (84,  0x95d4), 
                  (90,  0xe789), (98,  0xe78b), (101, 0xe78a), (102, 0x89de), (105, 0x93f4), (106, 0xe78c), (107, 0x9497), (109, 0x9352), 
                  (111, 0xe78d), (112, 0x8f71), (116, 0xe78f), (119, 0x96c0), (120, 0xe79e), (121, 0xe791), (122, 0xe792), (125, 0x92c7) ],
        153 => &[ (0,   0x91de), (1,   0x9197), (3,   0x93a6), (5,   0xe790), (6,   0x8b74), (11,  0xe799), (13,  0xe796), (14,  0xe7a3), 
                  (15,  0x93a7), (16,  0x9280), (17,  0xe793), (19,  0x92fc), (20,  0x9372), (21,  0xe794), (22,  0xe798), (23,  0x9080), 
                  (25,  0x9487), (26,  0x92ca), (29,  0x90c0), (30,  0xe797), (31,  0x91ac), (32,  0x91a2), (33,  0xe795), (34,  0x88a7), 
                  (35,  0x9841), (39,  0xe79a), (46,  0x91df), (49,  0x8f54), (50,  0x9069), (53,  0xe79c), (54,  0xe79b), (56,  0x88ed), 
                  (57,  0xe79d), (60,  0x954e), (62,  0xe7a5), (65,  0x93d9), (66,  0x908b), (69,  0x9278), (71,  0x8bf6), (73,  0xe7a4), 
                  (74,  0x9756), (75,  0x895e), (77,  0x95d5), (78,  0x89df), (79,  0xe79f), (80,  0xe7a0), (81,  0xe7a1), (82,  0xe7a2), 
                  (83,  0x93b9), (84,  0x9242), (85,  0x88e1), (86,  0xe7a6), (88,  0xe7a7), (89,  0xeaa1), (92,  0x91bb), (94,  0xe7a8), 
                  (96,  0x8993), (97,  0x916b), (99,  0x8cad), (101, 0x9779), (103, 0xfbb5), (104, 0xe7a9), (105, 0x934b), (109, 0x9198), 
                  (110, 0x8ed5), (111, 0xe7aa), (114, 0xe7ad), (117, 0x8f85), (118, 0xe7ab), (119, 0x914a), (120, 0x9149), (122, 0x88e2), 
                  (124, 0x97c9), (125, 0xe7af), (127, 0x94f0) ],
        154 => &[ (0,   0xe7b1), (1,   0xe7b0), (2,   0xe7ae), (3,   0xe284), (4,   0x8ad2), (7,   0xe78e), (9,   0xe7b3), (10,  0xe7b2), 
                  (15,  0xe7b4), (17,  0x9757), (35,  0x93df), (38,  0x964d), (40,  0xe7b5), (42,  0x8ed7), (47,  0xe7b6), (49,  0xe7b7), 
                  (53,  0xe7b8), (56,  0x9340), (65,  0x88e8), (74,  0x8d78), (78,  0x9859), (91,  0xe7bc), (94,  0xfbb6), (97,  0x8c53), 
                  (98,  0xe7b9), (100, 0xe7ba), (104, 0x9594), (109, 0x8a73), (117, 0x9758), (119, 0x8bbd), (125, 0x9373) ],
        155 => &[ (2,   0xe7bd), (18,  0xe7be), (21,  0xfbb8), (25,  0xe7bf), (39,  0xfbb9), (45,  0x9341), (48,  0xe7c1), (50,  0xe7c0), 
                  (73,  0x93d1), (74,  0xe7c2), (75,  0x8f55), (76,  0x8ede), (77,  0x947a), (78,  0x9291), (82,  0x8ef0), (84,  0x908c), 
                  (86,  0xe7c3), (88,  0xe7c4), (98,  0x907c), (99,  0xe7c5), (101, 0xe7c6), (105, 0xe7c7), (106, 0x978f), (108, 0x8f56), 
                  (114, 0xe7c9), (115, 0xe7c8), (117, 0x8d79), (119, 0x8d93), (120, 0x8e5f) ],
        156 => &[ (2,   0xe7cc), (7,   0x8f86), (9,   0xe7cb), (11,  0xe7ca), (13,  0x91e7), (16,  0x8ced), (18,  0x90c1), (23,  0x94ae), 
                  (28,  0x8f58), (34,  0xe7cd), (36,  0x8fdd), (42,  0xe7d0), (43,  0xe7ce), (47,  0xe7cf), (52,  0xe7d2), (53,  0xe7d1), 
                  (56,  0x8ff8), (58,  0xe7d3), (64,  0xe7d4), (65,  0xe7d5), (70,  0x94ce), (71,  0x8dd1), (72,  0x8edf), (73,  0xe7d6), 
                  (75,  0xe7d7), (76,  0x97a2), (77,  0x8f64), (78,  0x96ec), (79,  0x97ca), (80,  0xe7d8), (81,  0x8be0), (86,  0xe7d9), 
                  (87,  0xfbbb), (88,  0x9342), (90,  0xfbba), (91,  0xe7dc), (92,  0x8a98), (93,  0x906a), (94,  0xfbbc), (95,  0xe7da), 
                  (97,  0xe7db), (99,  0x92de), (100, 0xfbbf), (101, 0xfbc0), (102, 0x9674), (103, 0x8bfa), (109, 0xfbbd), (110, 0xfbbe), 
                  (117, 0xe7de), (118, 0xe7df), (124, 0xe7dd), (127, 0xe7e1) ],
        157 => &[ (6,   0xfbc1), (10,  0xfbc3), (13,  0x93dd), (14,  0x8a62), (16,  0xfbc2), (17,  0xe7e5), (20,  0xe7e2), (21,  0xe7e4), 
                  (30,  0xe7e0), (41,  0xe86e), (44,  0xe7e3), (52,  0x97e9), (55,  0x8cd8), (57,  0xfbca), (58,  0xfbc4), (60,  0xfbc6), 
                  (63,  0xe7ed), (64,  0xfbc5), (68,  0x9353), (69,  0xe7e8), (72,  0xe7eb), (73,  0xe7e9), (75,  0xe7ee), (78,  0xfbc7), 
                  (80,  0xe7ef), (81,  0xfbc9), (87,  0xe7e7), (89,  0xfbc8), (90,  0xe7f4), (91,  0x8994), (94,  0xe7e6), (98,  0x94ab), 
                  (100, 0xe7ea), (102, 0x8fde), (103, 0xfbcb), (113, 0x8d7a), (119, 0xfbcd), (120, 0xfbce), (126, 0x9667) ],
        158 => &[ (0,   0x8be2), (3,   0x8f65), (5,   0x93ba), (8,   0xfa5f), (17,  0x914c), (19,  0xe7f2), (21,  0xe7ec), (22,  0xe7f1), 
                  (24,  0x96c1), (26,  0x92b6), (27,  0xe7f3), (28,  0xe7f0), (39,  0xfbcc), (45,  0x914b), (55,  0xe7f7), (57,  0xe7f6), 
                  (79,  0xe7f5), (80,  0xfbd2), (82,  0x964e), (83,  0xfbd6), (85,  0xfbd4), (87,  0xfbd0), (89,  0xfbd1), (96,  0xfbd5), 
                  (100, 0x8f9b), (103, 0xfbcf), (105, 0xe7f8), (106, 0x95dd), (109, 0x8973), (114, 0x9565), (115, 0x9292), (120, 0x8b98), 
                  (121, 0xfa65), (122, 0xe7fa), (123, 0xfbd9), (124, 0x8d7c), (127, 0xfbdc) ],
        159 => &[ (2,   0xfbde), (6,   0x8e4b), (15,  0xe7f9), (16,  0x908d), (24,  0x908e), (25,  0xe840), (26,  0xe842), (29,  0xfbdd), 
                  (30,  0xfbdb), (32,  0x8ff9), (33,  0xfbd8), (34,  0xe841), (35,  0xe843), (37,  0xfbd7), (38,  0x8bd1), (40,  0x9564), 
                  (43,  0x8ee0), (44,  0x9842), (46,  0xe7fc), (47,  0x8df6), (50,  0x985e), (53,  0xe845), (58,  0xe844), (59,  0xe846), 
                  (68,  0xe7fb), (72,  0xfa5e), (75,  0x93e7), (77,  0x9374), (84,  0x92d5), (86,  0xe84b), (87,  0xfbe0), (91,  0x9262), 
                  (92,  0xe847), (96,  0xe848), (108, 0x8c4c), (110, 0xe84a), (112, 0xfbdf), (117, 0x8cae), (124, 0xe849), (126, 0x8fdf) ],
        160 => &[ (12,  0x8a99), (20,  0xe84f), (22,  0x8dbd), (23,  0x9199), (26,  0x92c8), (36,  0xfbe1), (39,  0x8a5a), (44,  0xe84d), 
                  (45,  0xe84e), (46,  0x92c1), (48,  0xe84c), (57,  0xe850), (67,  0xe856), (70,  0xfbe2), (72,  0xe859), (80,  0xe858), 
                  (81,  0x934c), (86,  0xe851), (87,  0xe852), (88,  0xe855), (93,  0xe857), (94,  0xfbe3), (97,  0x8bbe), (100, 0xe85a), 
                  (101, 0xe854), (104, 0xe853), (120, 0xfbe4) ],
        161 => &[ (3,   0xe85e), (7,   0xe85f), (16,  0xe860), (19,  0xe85d), (20,  0xe85c), (24,  0x8fe0), (25,  0x93a8), (26,  0xe85b), 
                  (33,  0xe864), (43,  0xe862), (49,  0xfbe5), (53,  0xe863), (54,  0xe861), (56,  0x91f6), (58,  0xe865), (65,  0xe866), 
                  (68,  0xe868), (69,  0xfbe6), (72,  0xfbe7), (81,  0x8ad3), (82,  0xe867), (83,  0x96f8), (90,  0xe873), (91,  0xe869), 
                  (94,  0xe86c), (96,  0xe86a), (98,  0xe86b), (106, 0xe86d), (112, 0xe86f), (117, 0xe870), (119, 0xe871), (124, 0xe874), 
                  (125, 0xe872), (126, 0xe875), (127, 0xe877) ],
        162 => &[ (1,   0xe876) ],
        163 => &[ (119, 0x92b7) ],
        164 => &[ (0,   0x96e5), (2,   0xe878), (3,   0x914d), (7,   0xe879), (9,   0x95c2), (10,  0xe87a), (11,  0x8a4a), (15,  0x895b), 
                  (17,  0x8ad5), (18,  0xfbe8), (19,  0x8ad4), (20,  0xe87b), (22,  0xe87c), (24,  0xe87d), (25,  0xe87e), (32,  0xe880), 
                  (34,  0x8ad6), (35,  0x8a74), (36,  0x8d7d), (37,  0x94b4), (39,  0xe882), (40,  0xe881), (45,  0xe883), (50,  0x897b), 
                  (57,  0xe886), (59,  0xe885), (60,  0xe884), (62,  0xe887), (67,  0xe88a), (71,  0x88c5), (74,  0xe888), (76,  0xe88c), 
                  (77,  0xe88b), (84,  0xe88e), (85,  0xe88d), (86,  0xe88f), (88,  0x93ac), (92,  0xe890), (97,  0xe891), (98,  0xe893), 
                  (101, 0xe892) ],
        165 => &[ (28,  0x958c), (33,  0xe894), (40,  0xe895), (42,  0x8de3), (46,  0xe896), (47,  0xe897), (50,  0x9668), (59,  0x916a), 
                  (63,  0x88a2), (64,  0x91c9), (66,  0xe898), (68,  0x958d), (75,  0xe89b), (76,  0xe899), (77,  0x8d7e), (79,  0xe89a), 
                  (80,  0x8cc0), (91,  0x95c3), (92,  0xe89d), (93,  0xe89f), (94,  0xe89e), (95,  0xe8a0), (98,  0x8940), (99,  0x9077), 
                  (100, 0x8f9c), (101, 0x8ad7), (102, 0xe8a1), (106, 0x9486), (108, 0xe8a3), (112, 0x8941), (114, 0xe8a2), (115, 0x92c2), 
                  (117, 0x97cb), (118, 0x93a9), (119, 0xe89c), (120, 0x97a4), (122, 0x8caf), (125, 0x977a) ],
        166 => &[ (5,   0x8bf7), (6,   0x97b2), (8,   0x8c47), (10,  0x91e0), (11,  0xe440), (13,  0xe8a4), (14,  0x8a4b), (15,  0x908f), 
                  (20,  0x8a75), (21,  0xe8a6), (23,  0xe8a7), (24,  0xe8a5), (25,  0x8c84), (27,  0x8ddb), (28,  0x8fe1), (29,  0xfbeb), 
                  (32,  0x8942), (35,  0x97d7), (39,  0xe8a9), (40,  0xe7ac), (42,  0xe8a8), (47,  0xfbec), (48,  0xe8ac), (49,  0xe8aa), 
                  (50,  0xe8ab), (52,  0xe8ad), (54,  0xe8ae), (55,  0x97ea), (56,  0xe8af), (57,  0xe8b0), (59,  0x90c7), (60,  0x94b9), 
                  (64,  0x909d), (65,  0x8ae5), (68,  0x9759), (69,  0x89eb), (70,  0x8f57), (71,  0x8cd9), (73,  0xe8b3), (75,  0xe8b2), 
                  (76,  0x8e93), (77,  0xe8b4), (78,  0xe8b1), (81,  0x8e47), (85,  0xe8b8), (86,  0xe5ab), (89,  0x99d4), (91,  0x9097), 
                  (92,  0xe8b6), (98,  0x97a3), (99,  0x93ef), (104, 0x894a), (106, 0x90e1), (107, 0x8eb4), (112, 0x95b5), (114, 0x895f), 
                  (118, 0x97eb), (119, 0x978b), (121, 0xe8b9), (123, 0x9364) ],
        167 => &[ (0,   0x8ef9), (4,   0xe8ba), (6,   0xe8bb), (7,   0x906b), (8,   0xe8bc), (10,  0x97ec), (13,  0xe8b7), (14,  0xe8be), 
                  (15,  0xe8c0), (17,  0xe8bf), (19,  0xe8bd), (22,  0xe8c1), (25,  0xe8c2), (28,  0x919a), (30,  0x89e0), (36,  0xe8c3), 
                  (39,  0x96b6), (42,  0xe8c4), (48,  0xe8c5), (50,  0x9849), (51,  0xfbed), (56,  0x9e50), (57,  0xe8c6), (59,  0xfbee), 
                  (61,  0xe8c7), (62,  0xe8c8), (66,  0xe8cc), (67,  0xfbef), (68,  0xe8c9), (70,  0xe8ca), (72,  0xe8cb), (73,  0xe8cd), 
                  (77,  0xfbf0), (79,  0xfbf1), (81,  0xfbf2), (82,  0x90c2), (85,  0xfbf3), (86,  0x96f5), (89,  0x90c3), (92,  0xe8ce), 
                  (94,  0x94f1), (96,  0xe8cf), (97,  0xea72), (98,  0x96ca), (100, 0xe8d0), (102, 0xe8d1), (104, 0xe8d2), (105, 0x8a76), 
                  (107, 0xe8d4), (109, 0x9078), (113, 0xe8d5), (116, 0x8c43), (121, 0xe8d6), (122, 0xe8da), (124, 0xe8d8) ],
        168 => &[ (1,   0xe8d9), (4,   0x8a93), (5,   0xe8d7), (6,   0xe8db), (11,  0xe8dc), (13,  0x88c6), (15,  0xe8dd), (16,  0xe8de), 
                  (24,  0x8fe2), (28,  0xe8df), (32,  0x8b66), (35,  0xe8e2), (38,  0xe8e1), (40,  0xe8e0), (43,  0xe691), (45,  0x95da), 
                  (51,  0xe8e3), (52,  0xe8e4), (67,  0xe8e5), (70,  0xe8e6), (72,  0xe8e7), (75,  0xe8e8), (83,  0x8ad8), (92,  0xe8e9), 
                  (109, 0xe8ea), (110, 0x9442), (114, 0xe8ec), (115, 0x89b9), (117, 0xe8ef), (118, 0xe8ee), (123, 0x8943), (127, 0x8bbf) ],
        169 => &[ (1,   0x95c5), (2,   0x92b8), (3,   0x8da0), (5,   0x8d80), (6,   0x8f87), (8,   0x907b), (12,  0xe8f1), (15,  0xe8f0), 
                  (16,  0x9761), (17,  0x8ae6), (18,  0x94d0), (19,  0x93da), (23,  0x909c), (24,  0x97cc), (26,  0x8c7a), (33,  0xe8f4), 
                  (36,  0xe8f3), (44,  0x966a), (45,  0x93aa), (52,  0x896f), (55,  0xe8f5), (56,  0xe8f2), (59,  0x9570), (60,  0x978a), 
                  (61,  0xe8f6), (70,  0xe8f7), (75,  0xe8f9), (76,  0x91e8), (77,  0x8a7a), (78,  0x8a7b), (79,  0xe8f8), (84,  0x8ae7), 
                  (85,  0x8cb0), (87,  0xfbf4), (88,  0x8ae8), (91,  0x935e), (94,  0x97de), (101, 0xfbf5), (103, 0x8cda), (107, 0xe8fa), 
                  (111, 0xe8fb), (112, 0xe8fc), (113, 0xe940), (115, 0xe942), (116, 0xe941) ],
        170 => &[ (40,  0x9597), (42,  0xe943), (47,  0xe944), (49,  0xe945), (54,  0xe946), (67,  0xe948), (68,  0xe947), (70,  0xe949), 
                  (91,  0x94f2), (92,  0xe3ca), (95,  0x9048), (98,  0x8b51), (105, 0xe94a), (107, 0xe94b), (109, 0x99aa), (110, 0x9f5a), 
                  (111, 0x94d1), (114, 0x88f9), (116, 0x88b9), (124, 0x8e94), (125, 0x964f), (126, 0x8ffc) ],
        171 => &[ (3,   0xe94c), (5,   0x96dd), (9,   0xe94d), (10,  0x977b), (12,  0x8961), (16,  0x8e60), (18,  0xe94e), (19,  0x89ec), 
                  (20,  0xe94f), (24,  0xe950), (29,  0xe952), (30,  0xe953), (32,  0xe955), (33,  0xe951), (36,  0xe954), (39,  0xfbf8), 
                  (40,  0x8ad9), (44,  0xe956), (46,  0xe957), (61,  0xe958), (62,  0xe959), (66,  0xe95a), (69,  0xe95c), (73,  0xe95b), 
                  (75,  0xe95e), (76,  0xe961), (80,  0xe95d), (81,  0xe95f), (82,  0xe960), (85,  0xe962), (87,  0x8bc0) ],
        172 => &[ (22,  0x8ef1), (23,  0xe963), (24,  0xe964), (25,  0x8d81), (30,  0xfbfa), (37,  0xe965), (40,  0x8a5d), (44,  0x946e), 
                  (45,  0xe966), (46,  0xe967), (51,  0x9279), (52,  0x93e9), (60,  0xe968), (65,  0x949d), (68,  0x91ca), (69,  0x8977), 
                  (70,  0x8bec), (72,  0x8bed), (80,  0x9293), (81,  0xe96d), (82,  0x8bee), (85,  0x89ed), (88,  0xe96c), (91,  0xe96a), 
                  (93,  0xe96b), (95,  0xe969), (98,  0xe977), (109, 0xe96e), (110, 0xe96f), (113, 0xe970), (114, 0xe971), (120, 0xe973), 
                  (123, 0xe972), (127, 0x8f78) ],
        173 => &[ (1,   0xe974), (5,   0xe976), (14,  0x8b52), (15,  0xe975), (18,  0x919b), (19,  0x8cb1), (25,  0xe978), (40,  0x91cb), 
                  (43,  0xe979), (48,  0x93ab), (55,  0xe97a), (62,  0xe980), (64,  0xe97d), (66,  0xe97c), (67,  0xe97e), (69,  0xe97b), 
                  (77,  0xe982), (78,  0xfbfb), (85,  0xe981), (87,  0xe984), (90,  0x8bc1), (91,  0xe983), (95,  0xe985), (98,  0xe986), 
                  (100, 0xe988), (101, 0xe987), (105, 0xe989), (106, 0xe98b), (107, 0xe98a) ],
        174 => &[ (40,  0x8d9c), (45,  0xe98c), (48,  0xe98d), (56,  0x8a5b), (60,  0xe98e), (64,  0xe98f), (68,  0x9091), (79,  0xe990), 
                  (81,  0xe991), (83,  0xe992), (84,  0xe993), (88,  0x8d82), (89,  0xfbfc), (92,  0xfc40), (94,  0xe994), (95,  0xe995), 
                  (98,  0xe996), (99,  0xe997), (102, 0xe998), (106, 0x94af), (107, 0xe99a), (109, 0x9545), (110, 0xe99b), (111, 0xe999), 
                  (113, 0xe99d), (116, 0xe99c), (119, 0xe99e), (123, 0xe99f) ],
        175 => &[ (6,   0xe9a0), (24,  0xe9a1), (26,  0xe9a2), (31,  0xe9a3), (34,  0xe9a4), (35,  0xe9a5), (37,  0xe9a6), (39,  0xe9a7), 
                  (40,  0xe9a8), (41,  0xe9a9), (42,  0xe9aa), (46,  0xe9ab), (47,  0xe9ac), (49,  0x9f54), (50,  0xe9ad), (59,  0xe2f6), 
                  (60,  0x8b53), (65,  0x8a40), (66,  0x8db0), (67,  0xe9af), (68,  0xe9ae), (69,  0x96a3), (77,  0xe9b1), (78,  0xe9b2), 
                  (79,  0xe9b0), (81,  0xe9b3), (84,  0x9682), (88,  0xe9b4), (90,  0x8b9b), (111, 0x9844), (114, 0xfc42), (116, 0xe9b5), 
                  (117, 0xfc41) ],
        176 => &[ (3,   0xe9b7), (14,  0x88bc), (15,  0xfc43), (17,  0xe9b8), (18,  0x95a9), (19,  0xe9b6), (22,  0xe9b9), (23,  0xe9ba), 
                  (31,  0xe9bb), (32,  0xe9bc), (40,  0xe9bd), (42,  0x968e), (43,  0x8e4c), (45,  0x8df8), (46,  0x914e), (49,  0xfc44), 
                  (52,  0xe9be), (57,  0xe9c1), (59,  0xfc45), (64,  0xe9bf), (70,  0xe9c2), (73,  0x8cef), (74,  0xe9c0), (79,  0xe9c3), 
                  (81,  0xe9c4), (82,  0xe9c5), (84,  0xe9c9), (86,  0x8e49), (91,  0x91e2), (97,  0xe9ca), (98,  0xe9c7), (99,  0xe9c6), 
                  (100, 0xe9c8), (104, 0x8c7e), (112, 0xe9ce), (113, 0xe9cd), (114, 0xe9cc), (117, 0x88b1) ],
        177 => &[ (0,   0xfc46), (4,   0xe9d8), (6,   0xe9d4), (8,   0xe9d5), (9,   0xe9d1), (10,  0xe9d7), (12,  0xe9d3), (13,  0x8a82), 
                  (16,  0x986b), (18,  0xe9d6), (19,  0xe9d2), (20,  0xe9d0), (21,  0xe9cf), (27,  0xe9da), (33,  0xe9dd), (36,  0xe9dc), 
                  (37,  0xe9db), (45,  0x9568), (46,  0xe9d9), (47,  0x88f1), (48,  0xe9de), (50,  0xe9e0), (57,  0x8a8f), (58,  0xe9cb), 
                  (59,  0x8956), (62,  0xe9e2), (70,  0xe9e1), (71,  0xe9df), (72,  0x924c), (82,  0x9690), (87,  0x97d8), (90,  0xe9e3), 
                  (96,  0xe9e4), (103, 0xe9e5), (118, 0xe9e6), (120, 0xe9e7) ],
        178 => &[ (101, 0x92b9), (103, 0xe9e8), (105, 0x94b5), (107, 0xe9ed), (108, 0xe9e9), (112, 0xe9ea), (115, 0x9650), (116, 0x96c2), 
                  (118, 0x93ce) ],
        179 => &[ (3,   0xe9ee), (6,   0xe9ef), (7,   0x93bc), (8,   0xe9ec), (9,   0xe9eb), (14,  0x89a8), (18,  0xe9f7), (21,  0xe9f6), 
                  (27,  0x8995), (31,  0xe9f4), (35,  0xe9f3), (38,  0xe9f1), (40,  0x8a9b), (42,  0xe9f0), (43,  0x8eb0), (44,  0x89a7), 
                  (59,  0x8d83), (62,  0xe9fa), (63,  0xe9f9), (65,  0xe9f8), (68,  0xe9f5), (70,  0xe9fb), (72,  0xe9fc), (80,  0xea44), 
                  (81,  0xea43), (89,  0xea45), (92,  0x894c), (93,  0xea40), (94,  0xea41), (96,  0x8d94), (97,  0x96b7), (100, 0xea42), 
                  (107, 0xfc48), (108, 0x9651), (111, 0xea4a), (112, 0xfc47), (114, 0xea46), (122, 0xea4b) ],
        180 => &[ (7,   0xea48), (9,   0xea47), (15,  0x8c7b), (26,  0xea4c), (36,  0xea4d), (41,  0xea4e), (43,  0xea49), (47,  0xe9f2), 
                  (50,  0xea4f), (52,  0x92df), (56,  0xea53), (58,  0xea54), (59,  0xea52), (65,  0xea51), (66,  0xea57), (68,  0xea50), 
                  (70,  0xea55), (79,  0xea56), (83,  0xea59), (89,  0xea58), (102, 0xea5b), (109, 0xea5c), (111, 0xea5d), (114, 0x9868), 
                  (120, 0xea5a), (121, 0x91e9), (122, 0x8deb), (125, 0xea5e) ],
        181 => &[ (25,  0xfc4a), (26,  0xea5f), (27,  0xea60), (30,  0xea61), (117, 0xea62), (120, 0x8cb2), (121, 0xea63), (125, 0xea64), 
                  (127, 0x8ead) ],
        182 => &[ (1,   0xea65), (8,   0xea66), (11,  0xea67), (12,  0xea68), (17,  0xea6b), (18,  0xea69), (19,  0x985b), (21,  0xea6a), 
                  (23,  0x97ed), (29,  0xea6c), (31,  0x97d9), (37,  0xea6d), (38,  0x949e), (41,  0xea6e), (42,  0xea70), (45,  0xea71), 
                  (56,  0xea6f), (57,  0x8d8d), (58,  0x96cb), (59,  0x9683), (60,  0x9bf5), (62,  0x9f80), (63,  0x969b), (68,  0x89a9), 
                  (76,  0xea73), (77,  0x8b6f), (78,  0xea74), (79,  0xea75), (80,  0xea76), (81,  0xfc4b), (82,  0x8d95), (84,  0xea77), 
                  (88,  0xe0d2), (89,  0x96d9), (91,  0x91e1), (92,  0xea78), (93,  0xea7a), (94,  0xea79), (96,  0xea7b), (101, 0xea7c), 
                  (104, 0xea7d), (111, 0xea7e), (116, 0xea80), (118, 0xea81), (119, 0xea82), (121, 0xea83), (123, 0xea84), (124, 0xea85), 
                  (125, 0xea86) ],
        183 => &[ (7,   0xea87), (8,   0xea88), (14,  0x9343), (19,  0x8cdb), (21,  0xea8a), (32,  0x916c), (33,  0xea8b), (44,  0xea8c), 
                  (59,  0x9540), (62,  0xea8d), (74,  0xea8e), (75,  0xe256), (78,  0xe6d8), (79,  0xe8eb), (82,  0xea8f), (84,  0xea90), 
                  (95,  0xea92), (96,  0xea93), (97,  0xea94), (98,  0x97ee), (99,  0xea91), (102, 0xea95), (103, 0xea96), (106, 0xea98), 
                  (108, 0xea97), (114, 0xea9a), (118, 0xea9b), (119, 0xea99) ],
        184 => &[ (13,  0x97b4), (21,  0xea9c), (28,  0xea9d), (29,  0xe273), (32,  0xea9e) ],
        185 => &[ (41,  0xfae0) ],
        186 => &[ (92,  0xfbe9) ],
        187 => &[ (14,  0xfa90), (15,  0xfa9b), (16,  0xfa9c), (17,  0xfab1), (18,  0xfad8), (19,  0xfae8), (20,  0xfaea), (21,  0xfb58), 
                  (22,  0xfb5e), (23,  0xfb75), (24,  0xfb7d), (25,  0xfb7e), (26,  0xfb80), (27,  0xfb82), (28,  0xfb86), (29,  0xfb89), 
                  (30,  0xfb92), (31,  0xfb9d), (32,  0xfb9f), (33,  0xfba0), (34,  0xfba9), (35,  0xfbb1), (36,  0xfbb3), (37,  0xfbb4), 
                  (38,  0xfbb7), (39,  0xfbd3), (40,  0xfbda), (41,  0xfbea), (42,  0xfbf6), (43,  0xfbf7), (44,  0xfbf9), (45,  0xfc49) ],
        188 => &[ (1,   0x8149), (2,   0xfa57), (3,   0x8194), (4,   0x8190), (5,   0x8193), (6,   0x8195), (7,   0xfa56), (8,   0x8169), 
                  (9,   0x816a), (10,  0x8196), (11,  0x817b), (12,  0x8143), (13,  0x817c), (14,  0x8144), (15,  0x815e), (16,  0x824f), 
                  (17,  0x8250), (18,  0x8251), (19,  0x8252), (20,  0x8253), (21,  0x8254), (22,  0x8255), (23,  0x8256), (24,  0x8257), 
                  (25,  0x8258), (26,  0x8146), (27,  0x8147), (28,  0x8183), (29,  0x8181), (30,  0x8184), (31,  0x8148), (32,  0x8197), 
                  (33,  0x8260), (34,  0x8261), (35,  0x8262), (36,  0x8263), (37,  0x8264), (38,  0x8265), (39,  0x8266), (40,  0x8267), 
                  (41,  0x8268), (42,  0x8269), (43,  0x826a), (44,  0x826b), (45,  0x826c), (46,  0x826d), (47,  0x826e), (48,  0x826f), 
                  (49,  0x8270), (50,  0x8271), (51,  0x8272), (52,  0x8273), (53,  0x8274), (54,  0x8275), (55,  0x8276), (56,  0x8277), 
                  (57,  0x8278), (58,  0x8279), (59,  0x816d), (60,  0x815f), (61,  0x816e), (62,  0x814f), (63,  0x8151), (64,  0x814d), 
                  (65,  0x8281), (66,  0x8282), (67,  0x8283), (68,  0x8284), (69,  0x8285), (70,  0x8286), (71,  0x8287), (72,  0x8288), 
                  (73,  0x8289), (74,  0x828a), (75,  0x828b), (76,  0x828c), (77,  0x828d), (78,  0x828e), (79,  0x828f), (80,  0x8290), 
                  (81,  0x8291), (82,  0x8292), (83,  0x8293), (84,  0x8294), (85,  0x8295), (86,  0x8296), (87,  0x8297), (88,  0x8298), 
                  (89,  0x8299), (90,  0x829a), (91,  0x816f), (92,  0x8162), (93,  0x8170), (94,  0x8160), (97,  0x00a1), (98,  0x00a2), 
                  (99,  0x00a3), (100, 0x00a4), (101, 0x00a5), (102, 0x00a6), (103, 0x00a7), (104, 0x00a8), (105, 0x00a9), (106, 0x00aa), 
                  (107, 0x00ab), (108, 0x00ac), (109, 0x00ad), (110, 0x00ae), (111, 0x00af), (112, 0x00b0), (113, 0x00b1), (114, 0x00b2), 
                  (115, 0x00b3), (116, 0x00b4), (117, 0x00b5), (118, 0x00b6), (119, 0x00b7), (120, 0x00b8), (121, 0x00b9), (122, 0x00ba), 
                  (123, 0x00bb), (124, 0x00bc), (125, 0x00bd), (126, 0x00be), (127, 0x00bf) ],
        189 => &[ (0,   0x00c0), (1,   0x00c1), (2,   0x00c2), (3,   0x00c3), (4,   0x00c4), (5,   0x00c5), (6,   0x00c6), (7,   0x00c7), 
                  (8,   0x00c8), (9,   0x00c9), (10,  0x00ca), (11,  0x00cb), (12,  0x00cc), (13,  0x00cd), (14,  0x00ce), (15,  0x00cf), 
                  (16,  0x00d0), (17,  0x00d1), (18,  0x00d2), (19,  0x00d3), (20,  0x00d4), (21,  0x00d5), (22,  0x00d6), (23,  0x00d7), 
                  (24,  0x00d8), (25,  0x00d9), (26,  0x00da), (27,  0x00db), (28,  0x00dc), (29,  0x00dd), (30,  0x00de), (31,  0x00df), 
                  (96,  0x8191), (97,  0x8192), (98,  0xfa54), (99,  0x8150), (100, 0xfa55), (101, 0x818f) ],
        _ => &[(0,0)],
    }
}

fn calc_utf8_byte_count(utf8_top: u8) -> i32 {
    let mut c = utf8_top >> 2;
    if c == 0x3f {
        return 6;
    }
    c = c >> 1;
    if c == 0x1f {
        return 5;
    }
    c = c >> 1;
    if c == 0xf {
        return 4;
    }   
    c = c >> 1;
    if c == 0x7 {
        return 3;
    }
    c = c >> 1;
    if c == 0x3 {
        return 2;
    }
    1
}

pub fn convert(source: &str) -> Vec<u8> {
    unsafe {
        let byt = source.as_bytes();
        let ptr = byt.as_ptr();
        let mut ans: Vec<u8> = Vec::new();

        let mut i: isize = 0;
        while i < byt.len() as isize {
            let (stp, tmp) = match calc_utf8_byte_count(*ptr.offset(i)) {
                6 => {
                    (6,
                    ((*ptr.offset(i+0) as u32 & 0x3)  << 30) |
                    ((*ptr.offset(i+1) as u32 & 0x3f) << 24) |
                    ((*ptr.offset(i+2) as u32 & 0x3f) << 18) |
                    ((*ptr.offset(i+3) as u32 & 0x3f) << 12) |
                    ((*ptr.offset(i+4) as u32 & 0x3f) << 6) |
                    (*ptr.offset(i+5) as u32 & 0x3f))
                },
                5 => {
                    (5,
                    ((*ptr.offset(i+0) as u32 & 0x7)  << 24) |
                    ((*ptr.offset(i+1) as u32 & 0x3f) << 18) |
                    ((*ptr.offset(i+2) as u32 & 0x3f) << 12) |
                    ((*ptr.offset(i+3) as u32 & 0x3f) << 6) |
                    (*ptr.offset(i+4) as u32 & 0x3f))
                },
                4 => {
                    (4,
                    ((*ptr.offset(i+0) as u32 & 0xf)  << 18) |
                    ((*ptr.offset(i+1) as u32 & 0x3f) << 12) |
                    ((*ptr.offset(i+2) as u32 & 0x3f) << 6) |
                    (*ptr.offset(i+3) as u32 & 0x3f))
                },
                3 => {
                    (3,
                    ((*ptr.offset(i+0) as u32 & 0x1f) << 12) |
                    ((*ptr.offset(i+1) as u32 & 0x3f) << 6) |
                    (*ptr.offset(i+2) as u32 & 0x3f))
                },
                2 => {
                    (2,
                    ((*ptr.offset(i+0) as u32 & 0x3f) << 6) |
                    (*ptr.offset(i+1) as u32 & 0x3f))
                },
                _ => {
                    (1,
                    (*ptr.offset(i+0) as u32))
                }
            };

            i += stp;
            if stp == 1 {
                let lw = (tmp & 0x7f) as u8;
                ans.push(lw);
            }
            else if tmp > 0xffff {
                ans.push(0);
            }
            else {
                let hi = TO_SJIS_HI[(tmp >> 7) as usize];
                let group = get_utf8_to_cp932(hi);

                let lw = (tmp & 0x7f) as u8;
                let mut lf = 0;
                let mut rt = group.len() - 1;
                while lf <= rt {
                    let mid = lf + ((rt - lf) >> 2);
                    if group[mid].0 == lw {
                        ans.push((group[mid].1 >> 8) as u8);
                        ans.push((group[mid].1 & 0xff) as u8);
                        break;
                    }
                    else if group[mid].0 < lw {
                        lf = mid + 1;
                    }
                    else {
                        rt = mid - 1;
                    }
                }
            }
        }
        ans
    }
}
